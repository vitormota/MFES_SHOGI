package mfes_shogi;

//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2013-12-02 by the VDM++ to JAVA Code Generator
// (v9.0.2 - Thu 14-Mar-2013 12:36:47 +0900)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// This file was genereted from "D:\\FEUP\\4o ano\\1o Semestre\\MFES\\MFES_SHOGI\\MFES_SHOGI\\classes/Piece.vdmpp".

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO
import java.util.Set;
import java.util.HashSet;
import jp.vdmtools.VDM.UTIL;
import jp.vdmtools.VDM.Record;
import jp.vdmtools.VDM.Sentinel;
import jp.vdmtools.VDM.EvaluatePP;
import jp.vdmtools.VDM.CGException;
// ***** VDMTOOLS END Name=imports



public abstract class Piece implements EvaluatePP {

// ***** VDMTOOLS START Name=belongTo KEEP=NO
  public volatile Object belongTo = null;
// ***** VDMTOOLS END Name=belongTo

// ***** VDMTOOLS START Name=promoted KEEP=NO
  protected volatile Boolean promoted = null;
// ***** VDMTOOLS END Name=promoted

// ***** VDMTOOLS START Name=sentinel KEEP=NO
  volatile Sentinel sentinel;
// ***** VDMTOOLS END Name=sentinel


// ***** VDMTOOLS START Name=PieceSentinel KEEP=NO
  class PieceSentinel extends Sentinel {

    public final int Piece = 0;

    public final int capture = 1;

    public final int promote = 2;

    public final int direction = 3;

    public final int getPromoted = 4;

    public final int validKingMove = 5;

    public final int validMovement = 6;

    public final int protectingKing = 7;

    public final int validGoldGeneralMove = 8;

    public final int nr_functions = 9;


    public PieceSentinel () throws CGException {}


    public PieceSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=PieceSentinel
;

// ***** VDMTOOLS START Name=evaluatePP#1|int KEEP=NO
  public Boolean evaluatePP (int fnr) throws CGException {
    return Boolean.TRUE;
  }
// ***** VDMTOOLS END Name=evaluatePP#1|int


// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new PieceSentinel(this);
    }
    catch (Exception e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel


// ***** VDMTOOLS START Name=vdm_init_Piece KEEP=NO
  private void vdm_init_Piece () {
    try {
      setSentinel();
      promoted = Boolean.FALSE;
    }
    catch (Exception e) {
      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_Piece


// ***** VDMTOOLS START Name=Piece KEEP=NO
  public Piece () throws CGException {
    vdm_init_Piece();
  }
// ***** VDMTOOLS END Name=Piece


// ***** VDMTOOLS START Name=Piece#1|Object KEEP=NO
  protected Piece (final Object p) throws CGException {
    vdm_init_Piece();
    belongTo = UTIL.clone(p);
  }
// ***** VDMTOOLS END Name=Piece#1|Object


// ***** VDMTOOLS START Name=direction KEEP=NO
  protected Number direction () throws CGException {
    sentinel.entering(((PieceSentinel)sentinel).direction);
    try {
      if (UTIL.equals(belongTo, new quotes.White())) 
        return new Integer(-1);
      else 
        return new Integer(1);
    }
    finally {
      sentinel.leaving(((PieceSentinel)sentinel).direction);
    }
  }
// ***** VDMTOOLS END Name=direction


// ***** VDMTOOLS START Name=validMovement#2|Cell|Cell KEEP=NO
  abstract public Boolean validMovement (final Cell c1, final Cell c2) throws CGException ;
// ***** VDMTOOLS END Name=validMovement#2|Cell|Cell


// ***** VDMTOOLS START Name=pre_validMovement#2|Cell|Cell KEEP=NO
  public Boolean pre_validMovement (final Cell c1, final Cell c2) throws CGException {
    Boolean varRes_3 = null;
    Boolean var1_4 = null;
    Board obj_9 = Board.getInstance();
    if ((var1_4 = Boolean.valueOf(UTIL.equals(c1, obj_9.getCell((c1.x), (c1.y))))).booleanValue()) {
      Board obj_18 = Board.getInstance();
      var1_4 = Boolean.valueOf(UTIL.equals(c1, obj_18.getCell((c2.x), (c2.y))));
    }
    if ((varRes_3 = var1_4).booleanValue()) 
      varRes_3 = Boolean.valueOf(!UTIL.equals((c1.piece), null));
    return varRes_3;
  }
// ***** VDMTOOLS END Name=pre_validMovement#2|Cell|Cell


// ***** VDMTOOLS START Name=capture KEEP=NO
  public void capture () throws CGException {
    sentinel.entering(((PieceSentinel)sentinel).capture);
    try {
      if (UTIL.equals(belongTo, new quotes.White())) 
        belongTo = new quotes.Black();
      else 
        belongTo = new quotes.White();
      promoted = Boolean.FALSE;
    }
    finally {
      sentinel.leaving(((PieceSentinel)sentinel).capture);
    }
  }
// ***** VDMTOOLS END Name=capture


// ***** VDMTOOLS START Name=promote KEEP=NO
  public void promote () throws CGException {
    sentinel.entering(((PieceSentinel)sentinel).promote);
    try {
      if (!this.pre_promote().booleanValue()) 
        UTIL.RunTime("Precondition failure in promote");
      promoted = Boolean.TRUE;
    }
    finally {
      sentinel.leaving(((PieceSentinel)sentinel).promote);
    }
  }
// ***** VDMTOOLS END Name=promote


// ***** VDMTOOLS START Name=pre_promote KEEP=NO
  public Boolean pre_promote () throws CGException {
    Boolean varRes_1 = null;
    Boolean var1_2 = null;
    if ((var1_2 = Boolean.valueOf(!(this instanceof GoldGeneral))).booleanValue()) 
      var1_2 = Boolean.valueOf(!(this instanceof King));
    if ((varRes_1 = var1_2).booleanValue()) 
      varRes_1 = Boolean.valueOf(!promoted.booleanValue());
    return varRes_1;
  }
// ***** VDMTOOLS END Name=pre_promote


// ***** VDMTOOLS START Name=getPromoted KEEP=NO
  public Boolean getPromoted () throws CGException {
    sentinel.entering(((PieceSentinel)sentinel).getPromoted);
    try {
      return promoted;
    }
    finally {
      sentinel.leaving(((PieceSentinel)sentinel).getPromoted);
    }
  }
// ***** VDMTOOLS END Name=getPromoted


// ***** VDMTOOLS START Name=validGoldGeneralMove#2|Cell|Cell KEEP=NO
  protected Boolean validGoldGeneralMove (final Cell c1, final Cell c2) throws CGException {
    sentinel.entering(((PieceSentinel)sentinel).validGoldGeneralMove);
    try {
      if (!this.pre_validGoldGeneralMove(c1, c2).booleanValue()) 
        UTIL.RunTime("Precondition failure in validGoldGeneralMove");
      Boolean rexpr_3 = null;
      Boolean var1_4 = null;
      Boolean var1_5 = null;
      if ((var1_5 = Boolean.valueOf((c1.x).intValue() == (c2.x).intValue())).booleanValue()) 
        var1_5 = Boolean.valueOf(Math.abs(((c1.y).intValue() - (c2.y).intValue())) == 1);
      if (!(var1_4 = var1_5).booleanValue()) {
        Boolean var2_19 = null;
        if ((var2_19 = Boolean.valueOf((c1.y).intValue() == (c2.y).intValue())).booleanValue()) 
          var2_19 = Boolean.valueOf(Math.abs(((c1.x).intValue() - (c2.x).intValue())) == 1);
        var1_4 = var2_19;
      }
      if (!(rexpr_3 = var1_4).booleanValue()) {
        Boolean var2_33 = null;
        Boolean var1_34 = null;
        if ((var1_34 = Boolean.valueOf((c1.y).intValue() == ((c2.y).intValue() + direction().intValue()))).booleanValue()) 
          var1_34 = Boolean.valueOf(Math.abs(((c1.x).intValue() - (c2.x).intValue())) == 1);
        if ((var2_33 = var1_34).booleanValue()) {
          Boolean var2_50 = null;
          if (!(var2_50 = Boolean.valueOf(UTIL.equals((c2.piece), null))).booleanValue()) {
            Boolean var2_55 = null;
            if ((var2_55 = Boolean.valueOf(!UTIL.equals((c2.piece), null))).booleanValue()) 
              var2_55 = Boolean.valueOf(!UTIL.equals(((c2.piece).belongTo), ((c1.piece).belongTo)));
            var2_50 = var2_55;
          }
          var2_33 = var2_50;
        }
        rexpr_3 = var2_33;
      }
      return rexpr_3;
    }
    finally {
      sentinel.leaving(((PieceSentinel)sentinel).validGoldGeneralMove);
    }
  }
// ***** VDMTOOLS END Name=validGoldGeneralMove#2|Cell|Cell


// ***** VDMTOOLS START Name=pre_validGoldGeneralMove#2|Cell|Cell KEEP=NO
  protected Boolean pre_validGoldGeneralMove (final Cell c1, final Cell c2) throws CGException {
    Boolean varRes_3 = null;
    Boolean var1_4 = null;
    Board obj_9 = Board.getInstance();
    if ((var1_4 = Boolean.valueOf(UTIL.equals(c1, obj_9.getCell((c1.x), (c1.y))))).booleanValue()) {
      Board obj_18 = Board.getInstance();
      var1_4 = Boolean.valueOf(UTIL.equals(c2, obj_18.getCell((c2.x), (c2.y))));
    }
    if ((varRes_3 = var1_4).booleanValue()) 
      varRes_3 = Boolean.valueOf(!UTIL.equals((c1.piece), null));
    return varRes_3;
  }
// ***** VDMTOOLS END Name=pre_validGoldGeneralMove#2|Cell|Cell


// ***** VDMTOOLS START Name=validKingMove#2|Cell|Cell KEEP=NO
  protected Boolean validKingMove (final Cell c1, final Cell c2) throws CGException {
    sentinel.entering(((PieceSentinel)sentinel).validKingMove);
    try {
      if (!this.pre_validKingMove(c1, c2).booleanValue()) 
        UTIL.RunTime("Precondition failure in validKingMove");
      Boolean rexpr_3 = null;
      Boolean var1_4 = null;
      Boolean var1_5 = null;
      if ((var1_5 = Boolean.valueOf(Math.abs(((c1.x).intValue() - (c2.x).intValue())) == 0)).booleanValue()) 
        var1_5 = Boolean.valueOf(Math.abs(((c1.y).intValue() - (c2.y).intValue())) == 1);
      if (!(var1_4 = var1_5).booleanValue()) {
        Boolean var2_22 = null;
        if ((var2_22 = Boolean.valueOf(Math.abs(((c1.x).intValue() - (c2.x).intValue())) == 1)).booleanValue()) 
          var2_22 = Boolean.valueOf(Math.abs(((c1.y).intValue() - (c2.y).intValue())) == 0);
        var1_4 = var2_22;
      }
      if (!(rexpr_3 = var1_4).booleanValue()) {
        Boolean var2_39 = null;
        Boolean var1_40 = null;
        if ((var1_40 = Boolean.valueOf(Math.abs(((c1.x).intValue() - (c2.x).intValue())) == 1)).booleanValue()) 
          var1_40 = Boolean.valueOf(Math.abs(((c1.y).intValue() - (c2.y).intValue())) == 1);
        if ((var2_39 = var1_40).booleanValue()) {
          Boolean var2_57 = null;
          if (!(var2_57 = Boolean.valueOf(UTIL.equals((c2.piece), null))).booleanValue()) {
            Boolean var2_62 = null;
            if ((var2_62 = Boolean.valueOf(!UTIL.equals((c2.piece), null))).booleanValue()) 
              var2_62 = Boolean.valueOf(!UTIL.equals(((c2.piece).belongTo), ((c1.piece).belongTo)));
            var2_57 = var2_62;
          }
          var2_39 = var2_57;
        }
        rexpr_3 = var2_39;
      }
      return rexpr_3;
    }
    finally {
      sentinel.leaving(((PieceSentinel)sentinel).validKingMove);
    }
  }
// ***** VDMTOOLS END Name=validKingMove#2|Cell|Cell


// ***** VDMTOOLS START Name=pre_validKingMove#2|Cell|Cell KEEP=NO
  protected Boolean pre_validKingMove (final Cell c1, final Cell c2) throws CGException {
    Boolean varRes_3 = null;
    Boolean var1_4 = null;
    Board obj_9 = Board.getInstance();
    if ((var1_4 = Boolean.valueOf(UTIL.equals(c1, obj_9.getCell((c1.x), (c1.y))))).booleanValue()) {
      Board obj_18 = Board.getInstance();
      var1_4 = Boolean.valueOf(UTIL.equals(c2, obj_18.getCell((c2.x), (c2.y))));
    }
    if ((varRes_3 = var1_4).booleanValue()) 
      varRes_3 = Boolean.valueOf(!UTIL.equals((c1.piece), null));
    return varRes_3;
  }
// ***** VDMTOOLS END Name=pre_validKingMove#2|Cell|Cell


// ***** VDMTOOLS START Name=protectingKing#1|Cell KEEP=NO
  protected Boolean protectingKing (final Cell c) throws CGException {
    sentinel.entering(((PieceSentinel)sentinel).protectingKing);
    try {
      if (!this.pre_protectingKing(c).booleanValue()) 
        UTIL.RunTime("Precondition failure in protectingKing");
      {
        Boolean ret = null;
        c.piece = null;
        Board obj_6 = Board.getInstance();
        ret = (Boolean)UTIL.clone(obj_6.check(belongTo));
        c.piece = (Piece)this;
        return ret;
      }
    }
    finally {
      sentinel.leaving(((PieceSentinel)sentinel).protectingKing);
    }
  }
// ***** VDMTOOLS END Name=protectingKing#1|Cell


// ***** VDMTOOLS START Name=pre_protectingKing#1|Cell KEEP=NO
  protected Boolean pre_protectingKing (final Cell c) throws CGException {
    return Boolean.valueOf(UTIL.equals((c.piece), this));
  }
// ***** VDMTOOLS END Name=pre_protectingKing#1|Cell


// ***** VDMTOOLS START Name=dist#2|Number|Number KEEP=NO
  protected Number dist (final Number n1, final Number n2) throws CGException {
    return new Integer(Math.abs((n1.intValue() - n2.intValue())));
  }
// ***** VDMTOOLS END Name=dist#2|Number|Number


// ***** VDMTOOLS START Name=intermediateVals#2|Number|Number KEEP=NO
  public Set intermediateVals (final Number x1, final Number x2) throws CGException {
    Set varRes_3 = new HashSet();
    Set var1_4 = new HashSet();
    var1_4 = new HashSet();
    Number lb_27 = new Double(x1.intValue() + ((double)(x2.intValue() - x1.intValue()) / (double)Math.abs((x2.intValue() - x1.intValue()))));
    if (!UTIL.IsInteger(lb_27)) 
      UTIL.RunTime("Lower bound was not an integer in set range expression");
    int lbi_26 = UTIL.NumberToInt(lb_27).intValue();
    Number ub_29 = new Double(x2.intValue() + ((double)(x1.intValue() - x2.intValue()) / (double)Math.abs((x1.intValue() - x2.intValue()))));
    if (!UTIL.IsInteger(ub_29)) 
      UTIL.RunTime("Upper bound was not an integer in set range expression");
    int ubi_28 = UTIL.NumberToInt(ub_29).intValue();
    for (int count_25 = lbi_26; count_25 <= ubi_28; count_25++) 
      var1_4.add(new Integer(count_25));
    Set var2_30 = new HashSet();
    var2_30 = new HashSet();
    Number lb_53 = new Double(x2.intValue() + ((double)(x1.intValue() - x2.intValue()) / (double)Math.abs((x1.intValue() - x2.intValue()))));
    if (!UTIL.IsInteger(lb_53)) 
      UTIL.RunTime("Lower bound was not an integer in set range expression");
    int lbi_52 = UTIL.NumberToInt(lb_53).intValue();
    Number ub_55 = new Double(x1.intValue() + ((double)(x2.intValue() - x1.intValue()) / (double)Math.abs((x2.intValue() - x1.intValue()))));
    if (!UTIL.IsInteger(ub_55)) 
      UTIL.RunTime("Upper bound was not an integer in set range expression");
    int ubi_54 = UTIL.NumberToInt(ub_55).intValue();
    for (int count_51 = lbi_52; count_51 <= ubi_54; count_51++) 
      var2_30.add(new Integer(count_51));
    varRes_3 = new HashSet(var1_4);
    varRes_3.addAll(var2_30);
    return varRes_3;
  }
// ***** VDMTOOLS END Name=intermediateVals#2|Number|Number
  
  @Override
  public String toString(){
      return this.getClass().getSimpleName();
  }
  
}
;
