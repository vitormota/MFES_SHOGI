package mfes_shogi;

// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2013-12-08 by the VDM++ to JAVA Code Generator
// (v9.0.2 - Thu 14-Mar-2013 12:36:47 +0900)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// This file was genereted from "D:\\FEUP\\4o ano\\1o Semestre\\MFES\\MFES_SHOGI\\MFES_SHOGI\\classes/Lance.rtf".

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO
import java.util.Set;
import java.util.HashSet;
import java.util.Iterator;
import jp.vdmtools.VDM.UTIL;
import jp.vdmtools.VDM.Record;
import jp.vdmtools.VDM.Sentinel;
import jp.vdmtools.VDM.EvaluatePP;
import jp.vdmtools.VDM.CGException;
// ***** VDMTOOLS END Name=imports



public class Lance extends Piece {


// ***** VDMTOOLS START Name=LanceSentinel KEEP=NO
  class LanceSentinel extends PieceSentinel {

    public final int Lance = 10;

    public final int validMovement = 11;

    public final int nr_functions = 12;


    public LanceSentinel () throws CGException {}


    public LanceSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=LanceSentinel
;

// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new LanceSentinel(this);
    }
    catch (Exception e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel


// ***** VDMTOOLS START Name=vdm_init_Lance KEEP=NO
  private void vdm_init_Lance () {}
// ***** VDMTOOLS END Name=vdm_init_Lance


// ***** VDMTOOLS START Name=Lance KEEP=NO
  public Lance () throws CGException {
    vdm_init_Lance();
  }
// ***** VDMTOOLS END Name=Lance


// ***** VDMTOOLS START Name=Lance#1|Object KEEP=NO
  public Lance (final Object p) throws CGException {
    super(p);
    vdm_init_Lance();
  }
// ***** VDMTOOLS END Name=Lance#1|Object


// ***** VDMTOOLS START Name=validMovement#2|Cell|Cell KEEP=NO
  public Boolean validMovement (final Cell c1, final Cell c2) throws CGException {
    sentinel.entering(((LanceSentinel)sentinel).validMovement);
    try {
      if (promoted.booleanValue()) 
        return validGoldGeneralMove(c1, c2);
      else {
        Boolean rexpr_4 = null;
        if ((rexpr_4 = Boolean.valueOf((c1.x).intValue() == (c2.x).intValue())).booleanValue()) {
          boolean tmpQuant_11 = false;
          {
            Set e_set_12 = new HashSet();
            e_set_12 = new HashSet();
            for (int count_15 = 1; count_15 <= 8; count_15++) 
              e_set_12.add(new Integer(count_15));
            Number y = null;
            Set tmpSet_71 = new HashSet(e_set_12);
            for (Iterator enm_70 = tmpSet_71.iterator(); enm_70.hasNext() && !tmpQuant_11; ) {
              Number elem_69 = UTIL.NumberToInt(enm_70.next());
              /* y */
              y = elem_69;
              Boolean pred_18 = null;
              Boolean var1_19 = null;
              Boolean var1_20 = null;
              if ((var1_20 = Boolean.valueOf((c1.y).intValue() == ((c2.y).intValue() + (y.intValue() * direction().intValue())))).booleanValue()) {
                boolean tmpQuant_31 = true;
                {
                  Set e1_set_37 = intermediateVals((c1.y), (c2.y));
                  Number yi = null;
                  Set tmpSet_60 = new HashSet(e1_set_37);
                  for (Iterator enm_59 = tmpSet_60.iterator(); enm_59.hasNext() && tmpQuant_31; ) {
                    Number elem_58 = UTIL.NumberToInt(enm_59.next());
                    /* yi */
                    yi = elem_58;
                    Boolean pred_38 = null;
                    Boolean var1_39 = null;
                    Board obj_44 = Board.getInstance();
                    if (!(var1_39 = Boolean.valueOf(UTIL.equals((obj_44.getCell((c1.x), yi).piece), null))).booleanValue()) 
                      var1_39 = Boolean.valueOf(yi.intValue() == (c1.y).intValue());
                    if (!(pred_38 = var1_39).booleanValue()) 
                      pred_38 = Boolean.valueOf(yi.intValue() == (c2.y).intValue());
                    if (!pred_38.booleanValue()) 
                      tmpQuant_31 = false;
                  }
                }
                var1_20 = Boolean.valueOf(tmpQuant_31);
              }
              if ((var1_19 = var1_20).booleanValue()) 
                var1_19 = notFriend(c1, c2);
              if ((pred_18 = var1_19).booleanValue()) 
                pred_18 = Boolean.valueOf(!protectingKing(c1, c2).booleanValue());
              if (pred_18.booleanValue()) 
                tmpQuant_11 = true;
            }
          }
          rexpr_4 = Boolean.valueOf(tmpQuant_11);
        }
        return rexpr_4;
      }
    }
    finally {
      sentinel.leaving(((LanceSentinel)sentinel).validMovement);
    }
  }
// ***** VDMTOOLS END Name=validMovement#2|Cell|Cell

}
;
