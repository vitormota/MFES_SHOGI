package mfes_shogi;

//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2013-12-07 by the VDM++ to JAVA Code Generator
// (v9.0.2 - Thu 14-Mar-2013 12:36:47 +0900)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// This file was genereted from "C:\\Users\\vitor_000\\Documents\\Overture\\workspace\\MFES_SHOGI\\classes\\Knight.rtf".

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO
import jp.vdmtools.VDM.UTIL;
import jp.vdmtools.VDM.Record;
import jp.vdmtools.VDM.Sentinel;
import jp.vdmtools.VDM.EvaluatePP;
import jp.vdmtools.VDM.CGException;
// ***** VDMTOOLS END Name=imports



public class Knight extends Piece {


// ***** VDMTOOLS START Name=KnightSentinel KEEP=NO
  class KnightSentinel extends PieceSentinel {

    public final int Knight = 10;

    public final int validMovement = 11;

    public final int nr_functions = 12;


    public KnightSentinel () throws CGException {}


    public KnightSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=KnightSentinel
;

// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new KnightSentinel(this);
    }
    catch (Exception e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel


// ***** VDMTOOLS START Name=vdm_init_Knight KEEP=NO
  private void vdm_init_Knight () {}
// ***** VDMTOOLS END Name=vdm_init_Knight


// ***** VDMTOOLS START Name=Knight KEEP=NO
  public Knight () throws CGException {
    vdm_init_Knight();
  }
// ***** VDMTOOLS END Name=Knight


// ***** VDMTOOLS START Name=Knight#1|Object KEEP=NO
  public Knight (final Object p) throws CGException {
    super(p);
    vdm_init_Knight();
  }
// ***** VDMTOOLS END Name=Knight#1|Object


// ***** VDMTOOLS START Name=validMovement#2|Cell|Cell KEEP=NO
  public Boolean validMovement (final Cell c1, final Cell c2) throws CGException {
    sentinel.entering(((KnightSentinel)sentinel).validMovement);
    try {
      if (promoted.booleanValue()) 
        return validGoldGeneralMove(c1, c2);
      else {
        Boolean rexpr_4 = null;
        Boolean var1_5 = null;
        Boolean var1_6 = null;
        Boolean var1_7 = null;
        if (!(var1_7 = Boolean.valueOf((c1.x).intValue() == ((c2.x).intValue() + 1))).booleanValue()) 
          var1_7 = Boolean.valueOf((c1.x).intValue() == ((c2.x).intValue() - 1));
        if ((var1_6 = var1_7).booleanValue()) 
          var1_6 = Boolean.valueOf((c1.y).intValue() == ((c2.y).intValue() + (2 * direction().intValue())));
        if ((var1_5 = var1_6).booleanValue()) 
          var1_5 = notFriend(c1, c2);
        if ((rexpr_4 = var1_5).booleanValue()) 
          rexpr_4 = Boolean.valueOf(!protectingKing(c1, c2).booleanValue());
        return rexpr_4;
      }
    }
    finally {
      sentinel.leaving(((KnightSentinel)sentinel).validMovement);
    }
  }
// ***** VDMTOOLS END Name=validMovement#2|Cell|Cell

}
;
