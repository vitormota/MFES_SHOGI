package mfes_shogi;

//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2013-12-02 by the VDM++ to JAVA Code Generator
// (v9.0.2 - Thu 14-Mar-2013 12:36:47 +0900)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// This file was genereted from "D:\\FEUP\\4o ano\\1o Semestre\\MFES\\MFES_SHOGI\\MFES_SHOGI\\classes/Rook.vdmpp".

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO
import java.util.Set;
import java.util.HashSet;
import java.util.Iterator;
import jp.vdmtools.VDM.UTIL;
import jp.vdmtools.VDM.Record;
import jp.vdmtools.VDM.Sentinel;
import jp.vdmtools.VDM.EvaluatePP;
import jp.vdmtools.VDM.CGException;
// ***** VDMTOOLS END Name=imports



public class Rook extends Piece {


// ***** VDMTOOLS START Name=RookSentinel KEEP=NO
  class RookSentinel extends PieceSentinel {

    public final int Rook = 9;

    public final int validMovement = 10;

    public final int nr_functions = 11;


    public RookSentinel () throws CGException {}


    public RookSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=RookSentinel
;

// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new RookSentinel(this);
    }
    catch (Exception e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel


// ***** VDMTOOLS START Name=vdm_init_Rook KEEP=NO
  private void vdm_init_Rook () {}
// ***** VDMTOOLS END Name=vdm_init_Rook


// ***** VDMTOOLS START Name=Rook KEEP=NO
  public Rook () throws CGException {
    vdm_init_Rook();
  }
// ***** VDMTOOLS END Name=Rook


// ***** VDMTOOLS START Name=Rook#1|Object KEEP=NO
  public Rook (final Object p) throws CGException {
    super(p);
    vdm_init_Rook();
  }
// ***** VDMTOOLS END Name=Rook#1|Object


// ***** VDMTOOLS START Name=validMovement#2|Cell|Cell KEEP=NO
  public Boolean validMovement (final Cell c1, final Cell c2) throws CGException {
    sentinel.entering(((RookSentinel)sentinel).validMovement);
    try {
      Boolean rexpr_3 = null;
      Boolean var1_4 = null;
      Boolean var1_5 = null;
      Boolean var1_6 = null;
      if ((var1_6 = Boolean.valueOf(Math.abs(((c1.x).intValue() - (c2.x).intValue())) == 0)).booleanValue()) 
        var1_6 = Boolean.valueOf(!(Math.abs(((c1.y).intValue() - (c2.y).intValue())) == 0));
      if ((var1_5 = var1_6).booleanValue()) {
        boolean tmpQuant_24 = true;
        {
          Set e1_set_30 = intermediateVals((c1.y), (c2.y));
          Number yi = null;
          Set tmpSet_53 = new HashSet(e1_set_30);
          for (Iterator enm_52 = tmpSet_53.iterator(); enm_52.hasNext() && tmpQuant_24; ) {
            Number elem_51 = UTIL.NumberToInt(enm_52.next());
            /* yi */
            yi = elem_51;
            Boolean pred_31 = null;
            Boolean var1_32 = null;
            Board obj_37 = Board.getInstance();
            if (!(var1_32 = Boolean.valueOf(UTIL.equals((obj_37.getCell((c1.x), yi).piece), null))).booleanValue()) 
              var1_32 = Boolean.valueOf(yi.intValue() == (c2.y).intValue());
            if (!(pred_31 = var1_32).booleanValue()) 
              pred_31 = Boolean.valueOf(yi.intValue() == (c1.y).intValue());
            if (!pred_31.booleanValue()) 
              tmpQuant_24 = false;
          }
        }
        var1_5 = Boolean.valueOf(tmpQuant_24);
      }
      if (!(var1_4 = var1_5).booleanValue()) {
        Boolean var2_54 = null;
        Boolean var1_55 = null;
        if ((var1_55 = Boolean.valueOf(!(Math.abs(((c1.x).intValue() - (c2.x).intValue())) == 0))).booleanValue()) 
          var1_55 = Boolean.valueOf(Math.abs(((c1.y).intValue() - (c2.y).intValue())) == 0);
        if ((var2_54 = var1_55).booleanValue()) {
          boolean tmpQuant_73 = true;
          {
            Set e1_set_79 = intermediateVals((c1.x), (c2.x));
            Number xi = null;
            Set tmpSet_102 = new HashSet(e1_set_79);
            for (Iterator enm_101 = tmpSet_102.iterator(); enm_101.hasNext() && tmpQuant_73; ) {
              Number elem_100 = UTIL.NumberToInt(enm_101.next());
              /* xi */
              xi = elem_100;
              Boolean pred_80 = null;
              Boolean var1_81 = null;
              Board obj_86 = Board.getInstance();
              if (!(var1_81 = Boolean.valueOf(UTIL.equals((obj_86.getCell(xi, (c1.y)).piece), null))).booleanValue()) 
                var1_81 = Boolean.valueOf(xi.intValue() == (c2.x).intValue());
              if (!(pred_80 = var1_81).booleanValue()) 
                pred_80 = Boolean.valueOf(xi.intValue() == (c1.x).intValue());
              if (!pred_80.booleanValue()) 
                tmpQuant_73 = false;
            }
          }
          var2_54 = Boolean.valueOf(tmpQuant_73);
        }
        var1_4 = var2_54;
      }
      if (!(rexpr_3 = var1_4).booleanValue()) {
        Boolean var2_103 = null;
        Boolean var1_104 = null;
        Boolean var1_105 = null;
        if ((var1_105 = promoted).booleanValue()) 
          var1_105 = validKingMove(c1, c2);
        if ((var1_104 = var1_105).booleanValue()) {
          Boolean var2_110 = null;
          if (!(var2_110 = Boolean.valueOf(UTIL.equals((c2.piece), null))).booleanValue()) {
            Boolean var2_115 = null;
            if ((var2_115 = Boolean.valueOf(!UTIL.equals((c2.piece), null))).booleanValue()) 
              var2_115 = Boolean.valueOf(!UTIL.equals(((c2.piece).belongTo), ((c1.piece).belongTo)));
            var2_110 = var2_115;
          }
          var1_104 = var2_110;
        }
        if ((var2_103 = var1_104).booleanValue()) 
          var2_103 = Boolean.valueOf(!protectingKing(c1).booleanValue());
        rexpr_3 = var2_103;
      }
      return rexpr_3;
    }
    finally {
      sentinel.leaving(((RookSentinel)sentinel).validMovement);
    }
  }
// ***** VDMTOOLS END Name=validMovement#2|Cell|Cell

}
;
