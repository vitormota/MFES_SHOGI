//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2013-12-04 by the VDM++ to JAVA Code Generator
// (v9.0.2 - Thu 14-Mar-2013 12:36:47 +0900)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// This file was genereted from "D:\\FEUP\\4o ano\\1o Semestre\\MFES\\MFES_SHOGI\\MFES_SHOGI\\classes/Board.vdmpp".

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO
import java.util.Map;
import java.util.Set;
import java.util.List;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.ArrayList;
import jp.vdmtools.VDM.UTIL;
import jp.vdmtools.VDM.Record;
import jp.vdmtools.VDM.Sentinel;
import jp.vdmtools.VDM.EvaluatePP;
import jp.vdmtools.VDM.CGException;
// ***** VDMTOOLS END Name=imports



public class Board implements EvaluatePP {

// ***** VDMTOOLS START Name=capturedPieces KEEP=NO
  private volatile Map capturedPieces = new HashMap();
// ***** VDMTOOLS END Name=capturedPieces

// ***** VDMTOOLS START Name=lines KEEP=NO
  private volatile Map lines = new HashMap();
// ***** VDMTOOLS END Name=lines

// ***** VDMTOOLS START Name=turn KEEP=NO
  public volatile Object turn = null;
// ***** VDMTOOLS END Name=turn

// ***** VDMTOOLS START Name=gameState KEEP=NO
  private volatile Object gameState = null;
// ***** VDMTOOLS END Name=gameState

// ***** VDMTOOLS START Name=allMoves KEEP=NO
  public volatile List allMoves = null;
// ***** VDMTOOLS END Name=allMoves

// ***** VDMTOOLS START Name=possibleToPromote KEEP=NO
  private volatile Boolean possibleToPromote = null;
// ***** VDMTOOLS END Name=possibleToPromote

// ***** VDMTOOLS START Name=lastPlayedPiece KEEP=NO
  private volatile Cell lastPlayedPiece = null;
// ***** VDMTOOLS END Name=lastPlayedPiece

// ***** VDMTOOLS START Name=board KEEP=NO
  private volatile static Board board = null;
// ***** VDMTOOLS END Name=board

// ***** VDMTOOLS START Name=sentinel KEEP=NO
  volatile Sentinel sentinel;
// ***** VDMTOOLS END Name=sentinel


// ***** VDMTOOLS START Name=BoardSentinel KEEP=NO
  class BoardSentinel extends Sentinel {

    public final int move = 0;

    public final int Board = 1;

    public final int endGame = 2;

    public final int getCell = 3;

    public final int promote = 4;

    public final int endRound = 5;

    public final int getLines = 6;

    public final int dropPiece = 7;

    public final int getInstance = 8;

    public final int stateEquals = 9;

    public final int getGameState = 10;

    public final int needsToPromote = 11;

    public final int getCurrentState = 12;

    public final int inPromotionZone = 13;

    public final int check__1_n_Player = 14;

    public final int getAllEmptyCells = 15;

    public final int getCheckingPiece = 16;

    public final int getCapturedPieces = 17;

    public final int getKingFromPlayer = 18;

    public final int existsPawnInColumn = 19;

    public final int getCurrentStateLine = 20;

    public final int getPossibleToPromote = 21;

    public final int getAllCellsFromPlayer = 22;

    public final int getPlayersFarthestRank = 23;

    public final int check__2_n_Player_n_Cell = 24;

    public final int checkIfPawnDroppedCheck = 25;

    public final int getPlayersSecondFarthestRank = 26;

    public final int nr_functions = 27;


    public BoardSentinel () throws CGException {}


    public BoardSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=BoardSentinel
;

// ***** VDMTOOLS START Name=evaluatePP#1|int KEEP=NO
  public Boolean evaluatePP (int fnr) throws CGException {
    return Boolean.TRUE;
  }
// ***** VDMTOOLS END Name=evaluatePP#1|int


// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new BoardSentinel(this);
    }
    catch (Exception e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel

// ***** VDMTOOLS START Name=startPositions KEEP=NO
  private static final List startPositions;
// ***** VDMTOOLS END Name=startPositions


// ***** VDMTOOLS START Name=static KEEP=NO
  static {
    List startPositionstemp = null;
    try {
      List tmpSeq_104 = new ArrayList();
      List tmpSeq_106 = new ArrayList();
      tmpSeq_106.add(new quotes.LANCEW());
      tmpSeq_106.add(new quotes.KNIGHTW());
      tmpSeq_106.add(new quotes.SILVERGENERALW());
      tmpSeq_106.add(new quotes.GOLDGENERALW());
      tmpSeq_106.add(new quotes.KINGW());
      tmpSeq_106.add(new quotes.GOLDGENERALW());
      tmpSeq_106.add(new quotes.SILVERGENERALW());
      tmpSeq_106.add(new quotes.KNIGHTW());
      tmpSeq_106.add(new quotes.LANCEW());
      tmpSeq_104.add(tmpSeq_106);
      List tmpSeq_117 = new ArrayList();
      tmpSeq_117.add(new quotes.NONE());
      tmpSeq_117.add(new quotes.BISHOPW());
      tmpSeq_117.add(new quotes.NONE());
      tmpSeq_117.add(new quotes.NONE());
      tmpSeq_117.add(new quotes.NONE());
      tmpSeq_117.add(new quotes.NONE());
      tmpSeq_117.add(new quotes.NONE());
      tmpSeq_117.add(new quotes.ROOKW());
      tmpSeq_117.add(new quotes.NONE());
      tmpSeq_104.add(tmpSeq_117);
      List tmpSeq_128 = new ArrayList();
      tmpSeq_128.add(new quotes.PAWNW());
      tmpSeq_128.add(new quotes.PAWNW());
      tmpSeq_128.add(new quotes.PAWNW());
      tmpSeq_128.add(new quotes.PAWNW());
      tmpSeq_128.add(new quotes.PAWNW());
      tmpSeq_128.add(new quotes.PAWNW());
      tmpSeq_128.add(new quotes.PAWNW());
      tmpSeq_128.add(new quotes.PAWNW());
      tmpSeq_128.add(new quotes.PAWNW());
      tmpSeq_104.add(tmpSeq_128);
      List tmpSeq_139 = new ArrayList();
      tmpSeq_139.add(new quotes.NONE());
      tmpSeq_139.add(new quotes.NONE());
      tmpSeq_139.add(new quotes.NONE());
      tmpSeq_139.add(new quotes.NONE());
      tmpSeq_139.add(new quotes.NONE());
      tmpSeq_139.add(new quotes.NONE());
      tmpSeq_139.add(new quotes.NONE());
      tmpSeq_139.add(new quotes.NONE());
      tmpSeq_139.add(new quotes.NONE());
      tmpSeq_104.add(tmpSeq_139);
      List tmpSeq_150 = new ArrayList();
      tmpSeq_150.add(new quotes.NONE());
      tmpSeq_150.add(new quotes.NONE());
      tmpSeq_150.add(new quotes.NONE());
      tmpSeq_150.add(new quotes.NONE());
      tmpSeq_150.add(new quotes.NONE());
      tmpSeq_150.add(new quotes.NONE());
      tmpSeq_150.add(new quotes.NONE());
      tmpSeq_150.add(new quotes.NONE());
      tmpSeq_150.add(new quotes.NONE());
      tmpSeq_104.add(tmpSeq_150);
      List tmpSeq_161 = new ArrayList();
      tmpSeq_161.add(new quotes.NONE());
      tmpSeq_161.add(new quotes.NONE());
      tmpSeq_161.add(new quotes.NONE());
      tmpSeq_161.add(new quotes.NONE());
      tmpSeq_161.add(new quotes.NONE());
      tmpSeq_161.add(new quotes.NONE());
      tmpSeq_161.add(new quotes.NONE());
      tmpSeq_161.add(new quotes.NONE());
      tmpSeq_161.add(new quotes.NONE());
      tmpSeq_104.add(tmpSeq_161);
      List tmpSeq_172 = new ArrayList();
      tmpSeq_172.add(new quotes.PAWNB());
      tmpSeq_172.add(new quotes.PAWNB());
      tmpSeq_172.add(new quotes.PAWNB());
      tmpSeq_172.add(new quotes.PAWNB());
      tmpSeq_172.add(new quotes.PAWNB());
      tmpSeq_172.add(new quotes.PAWNB());
      tmpSeq_172.add(new quotes.PAWNB());
      tmpSeq_172.add(new quotes.PAWNB());
      tmpSeq_172.add(new quotes.PAWNB());
      tmpSeq_104.add(tmpSeq_172);
      List tmpSeq_183 = new ArrayList();
      tmpSeq_183.add(new quotes.NONE());
      tmpSeq_183.add(new quotes.ROOKB());
      tmpSeq_183.add(new quotes.NONE());
      tmpSeq_183.add(new quotes.NONE());
      tmpSeq_183.add(new quotes.NONE());
      tmpSeq_183.add(new quotes.NONE());
      tmpSeq_183.add(new quotes.NONE());
      tmpSeq_183.add(new quotes.BISHOPB());
      tmpSeq_183.add(new quotes.NONE());
      tmpSeq_104.add(tmpSeq_183);
      List tmpSeq_194 = new ArrayList();
      tmpSeq_194.add(new quotes.LANCEB());
      tmpSeq_194.add(new quotes.KNIGHTB());
      tmpSeq_194.add(new quotes.SILVERGENERALB());
      tmpSeq_194.add(new quotes.GOLDGENERALB());
      tmpSeq_194.add(new quotes.KINGB());
      tmpSeq_194.add(new quotes.GOLDGENERALB());
      tmpSeq_194.add(new quotes.SILVERGENERALB());
      tmpSeq_194.add(new quotes.KNIGHTB());
      tmpSeq_194.add(new quotes.LANCEB());
      tmpSeq_104.add(tmpSeq_194);
      List tmpVal_102 = tmpSeq_104;
      /* startPositionstemp */
      startPositionstemp = tmpVal_102;
    }
    catch (Throwable e) {
      System.out.println(e.getMessage());
    }
    startPositions = startPositionstemp;
    try {
      Board.board = new Board();
    }
    catch (Throwable e) {
      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=static


// ***** VDMTOOLS START Name=vdm_init_Board KEEP=NO
  private void vdm_init_Board () {
    try {
      setSentinel();
    }
    catch (Exception e) {
      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_Board


// ***** VDMTOOLS START Name=inv_Board KEEP=NO
  public Boolean inv_Board () {
    Boolean rexpr_204 = null;
    if ((rexpr_204 = Boolean.valueOf(new HashSet(lines.keySet()).size() == 9)).booleanValue()) {
      Set var2_213 = new HashSet();
      var2_213 = new HashSet();
      for (int count_216 = 1; count_216 <= 9; count_216++) 
        var2_213.add(new Integer(count_216));
      rexpr_204 = Boolean.valueOf(UTIL.equals(new HashSet(lines.keySet()), var2_213));
    }
    return rexpr_204;
  }
// ***** VDMTOOLS END Name=inv_Board


// ***** VDMTOOLS START Name=Board KEEP=NO
  protected Board () throws CGException {
    try {
      vdm_init_Board();
      Map res_m_2 = new HashMap();
      {
        Set e_set_12 = new HashSet();
        e_set_12 = new HashSet();
        for (int count_15 = 1; count_15 <= 9; count_15++) 
          e_set_12.add(new Integer(count_15));
        Number y = null;
        Set tmpSet_21 = new HashSet(e_set_12);
        for (Iterator enm_20 = tmpSet_21.iterator(); enm_20.hasNext(); ) {
          Number elem_19 = UTIL.NumberToInt(enm_20.next());
          /* y */
          y = elem_19;
          List arg_5 = null;
          if ((1 > y.intValue()) || (y.intValue() > startPositions.size())) 
            UTIL.RunTime("Illegal index");
          arg_5 = mapStartSeq(UTIL.ConvertToList(startPositions.get(y.intValue() - 1)), new Integer(1), y);
          res_m_2.put(y, new BoardLine(arg_5, y));
        }
      }
      lines = (Map)UTIL.clone(res_m_2);
      Map rhs_22 = new HashMap();
      rhs_22.put(new quotes.White(), new ArrayList());
      rhs_22.put(new quotes.Black(), new ArrayList());
      Map rhs_27 = rhs_22;
      if (!(((Object)rhs_27) instanceof Map)) 
        UTIL.RunTime("Incompatible type");
      capturedPieces = (Map)UTIL.clone(rhs_27);
      turn = new quotes.White();
      gameState = new quotes.Playing();
      List rhs_31 = new ArrayList();
      if (!(((Object)rhs_31) instanceof List)) 
        UTIL.RunTime("Incompatible type");
      allMoves = UTIL.ConvertToList(UTIL.clone(rhs_31));
      possibleToPromote = Boolean.FALSE;
      lastPlayedPiece = null;
      setSentinel();
    }
    catch (Throwable e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=Board


// ***** VDMTOOLS START Name=getGameState KEEP=NO
  public Object getGameState () throws CGException {
    sentinel.entering(((BoardSentinel)sentinel).getGameState);
    try {
      return gameState;
    }
    finally {
      sentinel.leaving(((BoardSentinel)sentinel).getGameState);
    }
  }
// ***** VDMTOOLS END Name=getGameState


// ***** VDMTOOLS START Name=getPossibleToPromote KEEP=NO
  public Boolean getPossibleToPromote () throws CGException {
    sentinel.entering(((BoardSentinel)sentinel).getPossibleToPromote);
    try {
      return possibleToPromote;
    }
    finally {
      sentinel.leaving(((BoardSentinel)sentinel).getPossibleToPromote);
    }
  }
// ***** VDMTOOLS END Name=getPossibleToPromote


// ***** VDMTOOLS START Name=getLines KEEP=NO
  public Map getLines () throws CGException {
    sentinel.entering(((BoardSentinel)sentinel).getLines);
    try {
      return lines;
    }
    finally {
      sentinel.leaving(((BoardSentinel)sentinel).getLines);
    }
  }
// ***** VDMTOOLS END Name=getLines


// ***** VDMTOOLS START Name=getInstance KEEP=NO
  static public Board getInstance () throws CGException {
    try {
      return board;
      setSentinel();
    }
    catch (Throwable e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=getInstance


// ***** VDMTOOLS START Name=getCell#2|Number|Number KEEP=NO
  public Cell getCell (final Number x, final Number y) throws CGException {
    sentinel.entering(((BoardSentinel)sentinel).getCell);
    try {
      if (!this.pre_getCell(x, y).booleanValue()) 
        UTIL.RunTime("Precondition failure in getCell");
      BoardLine obj_7 = (BoardLine)lines.get(y);
      return obj_7.getCell(x);
    }
    finally {
      sentinel.leaving(((BoardSentinel)sentinel).getCell);
    }
  }
// ***** VDMTOOLS END Name=getCell#2|Number|Number


// ***** VDMTOOLS START Name=pre_getCell#2|Number|Number KEEP=NO
  public Boolean pre_getCell (final Number x, final Number y) throws CGException {
    Boolean varRes_3 = null;
    Set var2_6 = new HashSet();
    var2_6 = new HashSet();
    for (int count_9 = 1; count_9 <= 9; count_9++) 
      var2_6.add(new Integer(count_9));
    if ((varRes_3 = Boolean.valueOf(UTIL.Contains(var2_6, x))).booleanValue()) {
      Set var2_14 = new HashSet();
      var2_14 = new HashSet();
      for (int count_17 = 1; count_17 <= 9; count_17++) 
        var2_14.add(new Integer(count_17));
      varRes_3 = Boolean.valueOf(UTIL.Contains(var2_14, y));
    }
    return varRes_3;
  }
// ***** VDMTOOLS END Name=pre_getCell#2|Number|Number


// ***** VDMTOOLS START Name=dropPiece#2|Cell|Piece KEEP=NO
  public void dropPiece (final Cell c, final Piece p) throws CGException {
    sentinel.entering(((BoardSentinel)sentinel).dropPiece);
    try {
      if (!this.pre_dropPiece(c, p).booleanValue()) 
        UTIL.RunTime("Precondition failure in dropPiece");
      c.piece = (Piece)p;
      if (!this.inv_Board().booleanValue()) 
        UTIL.RunTime("Instance invariant failure in Board");
      List mr_6 = null;
      List var1_7 = null;
      int from_11 = (int)Math.max(0, 0);
      int to_12 = (int)Math.min((UTIL.NumberToInt(getIndex(p, UTIL.ConvertToList(capturedPieces.get(turn)))).intValue() - 1), UTIL.ConvertToList(capturedPieces.get(turn)).size());
      if (from_11 > to_12) 
        var1_7 = new ArrayList();
      else 
        var1_7 = new ArrayList(UTIL.ConvertToList(capturedPieces.get(turn)).subList(from_11, to_12));
      List var2_26 = null;
      int from_30 = (int)Math.max((UTIL.NumberToInt(getIndex(p, UTIL.ConvertToList(capturedPieces.get(turn)))).intValue() + 1) - 1, 0);
      int to_31 = (int)Math.min(UTIL.ConvertToList(capturedPieces.get(turn)).size(), UTIL.ConvertToList(capturedPieces.get(turn)).size());
      if (from_30 > to_31) 
        var2_26 = new ArrayList();
      else 
        var2_26 = new ArrayList(UTIL.ConvertToList(capturedPieces.get(turn)).subList(from_30, to_31));
      mr_6 = new ArrayList(var1_7);
      mr_6.addAll(var2_26);
      capturedPieces.put(turn, mr_6);
      if (!this.inv_Board().booleanValue()) 
        UTIL.RunTime("Instance invariant failure in Board");
      endRound();
    }
    finally {
      sentinel.leaving(((BoardSentinel)sentinel).dropPiece);
    }
  }
// ***** VDMTOOLS END Name=dropPiece#2|Cell|Piece


// ***** VDMTOOLS START Name=pre_dropPiece#2|Cell|Piece KEEP=NO
  public Boolean pre_dropPiece (final Cell c, final Piece p) throws CGException {
    Boolean varRes_3 = null;
    Boolean var1_4 = null;
    Boolean var1_5 = null;
    if ((var1_5 = Boolean.valueOf(UTIL.equals((c.piece), null))).booleanValue()) 
      var1_5 = Boolean.valueOf(UTIL.Contains(new HashSet(UTIL.ConvertToList(capturedPieces.get(turn))), p));
    if ((var1_4 = var1_5).booleanValue()) 
      var1_4 = Boolean.valueOf(!existsPawnInColumn(c, p).booleanValue());
    if ((varRes_3 = var1_4).booleanValue()) 
      varRes_3 = Boolean.valueOf(!checkIfPawnDroppedCheck(c, p).booleanValue());
    return varRes_3;
  }
// ***** VDMTOOLS END Name=pre_dropPiece#2|Cell|Piece


// ***** VDMTOOLS START Name=move#2|Cell|Cell KEEP=NO
  public void move (final Cell c1, final Cell c2) throws CGException {
    sentinel.entering(((BoardSentinel)sentinel).move);
    try {
      if (!this.pre_move(c1, c2).booleanValue()) 
        UTIL.RunTime("Precondition failure in move");
      if (!UTIL.equals((c2.piece), null)) {
        Piece obj_10 = (c2.piece);
        obj_10.capture();
        List mr_12 = null;
        List tmpSeq_17 = new ArrayList();
        tmpSeq_17.add((c2.piece));
        mr_12 = new ArrayList(UTIL.ConvertToList(capturedPieces.get(turn)));
        mr_12.addAll(tmpSeq_17);
        capturedPieces.put(turn, mr_12);
        if (!this.inv_Board().booleanValue()) 
          UTIL.RunTime("Instance invariant failure in Board");
      }
      c2.piece = (Piece)c1.piece;
      if (!this.inv_Board().booleanValue()) 
        UTIL.RunTime("Instance invariant failure in Board");
      c1.piece = null;
      if (!this.inv_Board().booleanValue()) 
        UTIL.RunTime("Instance invariant failure in Board");
      if (needsToPromote(c2).booleanValue()) {
        Piece obj_38 = (c2.piece);
        obj_38.promote();
        possibleToPromote = Boolean.FALSE;
        if (!this.inv_Board().booleanValue()) 
          UTIL.RunTime("Instance invariant failure in Board");
      }
      else {
        Boolean cond_27 = null;
        if (!(cond_27 = inPromotionZone(c1, turn)).booleanValue()) 
          cond_27 = inPromotionZone(c2, turn);
        {
          if (cond_27.booleanValue()) {
            possibleToPromote = Boolean.TRUE;
            if (!this.inv_Board().booleanValue()) 
              UTIL.RunTime("Instance invariant failure in Board");
          }
        }
      }
      lastPlayedPiece = (Cell)UTIL.clone(c2);
      if (!this.inv_Board().booleanValue()) 
        UTIL.RunTime("Instance invariant failure in Board");
    }
    finally {
      sentinel.leaving(((BoardSentinel)sentinel).move);
    }
  }
// ***** VDMTOOLS END Name=move#2|Cell|Cell


// ***** VDMTOOLS START Name=pre_move#2|Cell|Cell KEEP=NO
  public Boolean pre_move (final Cell c1, final Cell c2) throws CGException {
    Boolean varRes_3 = null;
    Boolean var1_4 = null;
    Boolean var1_5 = null;
    Boolean var1_6 = null;
    Boolean var1_7 = null;
    if ((var1_7 = Boolean.valueOf(UTIL.equals(c1, getCell((c1.x), (c1.y))))).booleanValue()) 
      var1_7 = Boolean.valueOf(UTIL.equals(c2, getCell((c2.x), (c2.y))));
    if ((var1_6 = var1_7).booleanValue()) 
      var1_6 = Boolean.valueOf(!UTIL.equals((c1.piece), null));
    if ((var1_5 = var1_6).booleanValue()) {
      Piece obj_29 = (c1.piece);
      var1_5 = obj_29.validMovement(c1, c2);
    }
    if ((var1_4 = var1_5).booleanValue()) 
      var1_4 = Boolean.valueOf(UTIL.equals(((c1.piece).belongTo), turn));
    if ((varRes_3 = var1_4).booleanValue()) 
      varRes_3 = Boolean.valueOf(UTIL.equals(gameState, new quotes.Playing()));
    return varRes_3;
  }
// ***** VDMTOOLS END Name=pre_move#2|Cell|Cell


// ***** VDMTOOLS START Name=promote KEEP=NO
  public void promote () throws CGException {
    sentinel.entering(((BoardSentinel)sentinel).promote);
    try {
      if (!this.pre_promote().booleanValue()) 
        UTIL.RunTime("Precondition failure in promote");
      Piece obj_4 = (lastPlayedPiece.piece);
      obj_4.promote();
    }
    finally {
      sentinel.leaving(((BoardSentinel)sentinel).promote);
    }
  }
// ***** VDMTOOLS END Name=promote


// ***** VDMTOOLS START Name=pre_promote KEEP=NO
  public Boolean pre_promote () throws CGException {
    Boolean varRes_1 = null;
    if ((varRes_1 = Boolean.valueOf(UTIL.equals(possibleToPromote, Boolean.TRUE))).booleanValue()) 
      varRes_1 = Boolean.valueOf(!UTIL.equals(lastPlayedPiece, null));
    return varRes_1;
  }
// ***** VDMTOOLS END Name=pre_promote


// ***** VDMTOOLS START Name=endRound KEEP=NO
  public void endRound () throws CGException {
    sentinel.entering(((BoardSentinel)sentinel).endRound);
    try {
      possibleToPromote = Boolean.FALSE;
      if (!this.inv_Board().booleanValue()) 
        UTIL.RunTime("Instance invariant failure in Board");
      lastPlayedPiece = null;
      if (!this.inv_Board().booleanValue()) 
        UTIL.RunTime("Instance invariant failure in Board");
      if (UTIL.equals(turn, new quotes.White())) {
        turn = new quotes.Black();
        if (!this.inv_Board().booleanValue()) 
          UTIL.RunTime("Instance invariant failure in Board");
      }
      else {
        turn = new quotes.White();
        if (!this.inv_Board().booleanValue()) 
          UTIL.RunTime("Instance invariant failure in Board");
      }
      List rhs_7 = null;
      List tmpSeq_9 = new ArrayList();
      tmpSeq_9.add(new BoardState(getCurrentState(new Integer(1)), capturedPieces, turn));
      rhs_7 = new ArrayList(tmpSeq_9);
      rhs_7.addAll(allMoves);
      allMoves = UTIL.ConvertToList(UTIL.clone(rhs_7));
      if (!this.inv_Board().booleanValue()) 
        UTIL.RunTime("Instance invariant failure in Board");
      if (endGame().booleanValue()) {
        if (UTIL.equals(turn, new quotes.White())) {
          gameState = new quotes.WhiteWins();
          if (!this.inv_Board().booleanValue()) 
            UTIL.RunTime("Instance invariant failure in Board");
        }
        else {
          gameState = new quotes.BlackWins();
          if (!this.inv_Board().booleanValue()) 
            UTIL.RunTime("Instance invariant failure in Board");
        }
      }
    }
    finally {
      sentinel.leaving(((BoardSentinel)sentinel).endRound);
    }
  }
// ***** VDMTOOLS END Name=endRound


// ***** VDMTOOLS START Name=inPromotionZone#2|Cell|Object KEEP=NO
  private Boolean inPromotionZone (final Cell c, final Object p) throws CGException {
    sentinel.entering(((BoardSentinel)sentinel).inPromotionZone);
    try {
      Boolean cond_3 = null;
      if ((cond_3 = Boolean.valueOf(UTIL.equals(p, new quotes.White()))).booleanValue()) 
        cond_3 = Boolean.valueOf((c.y).intValue() < 4);
      if (cond_3.booleanValue()) 
        return Boolean.TRUE;
      Boolean cond_12 = null;
      if ((cond_12 = Boolean.valueOf(UTIL.equals(p, new quotes.Black()))).booleanValue()) 
        cond_12 = Boolean.valueOf((c.y).intValue() > 7);
      if (cond_12.booleanValue()) 
        return Boolean.TRUE;
      return Boolean.FALSE;
    }
    finally {
      sentinel.leaving(((BoardSentinel)sentinel).inPromotionZone);
    }
  }
// ***** VDMTOOLS END Name=inPromotionZone#2|Cell|Object


// ***** VDMTOOLS START Name=needsToPromote#1|Cell KEEP=NO
  private Boolean needsToPromote (final Cell c) throws CGException {
    sentinel.entering(((BoardSentinel)sentinel).needsToPromote);
    try {
      if (UTIL.equals((c.piece), null)) 
        return Boolean.FALSE;
      Boolean cond_7 = null;
      Boolean var1_8 = null;
      if (!(var1_8 = Boolean.valueOf((c.piece) instanceof Pawn)).booleanValue()) 
        var1_8 = Boolean.valueOf((c.piece) instanceof Lance);
      if ((cond_7 = var1_8).booleanValue()) 
        cond_7 = Boolean.valueOf((c.y).intValue() == getPlayersFarthestRank(((c.piece).belongTo)).intValue());
      if (cond_7.booleanValue()) 
        return Boolean.TRUE;
      Boolean cond_23 = null;
      if ((cond_23 = Boolean.valueOf((c.piece) instanceof Knight)).booleanValue()) {
        Boolean var2_27 = null;
        if (!(var2_27 = Boolean.valueOf((c.y).intValue() == getPlayersSecondFarthestRank(((c.piece).belongTo)).intValue())).booleanValue()) 
          var2_27 = Boolean.valueOf((c.y).intValue() == getPlayersFarthestRank(((c.piece).belongTo)).intValue());
        cond_23 = var2_27;
      }
      if (cond_23.booleanValue()) 
        return Boolean.TRUE;
      return Boolean.FALSE;
    }
    finally {
      sentinel.leaving(((BoardSentinel)sentinel).needsToPromote);
    }
  }
// ***** VDMTOOLS END Name=needsToPromote#1|Cell


// ***** VDMTOOLS START Name=getPlayersFarthestRank#1|Object KEEP=NO
  private Number getPlayersFarthestRank (final Object p) throws CGException {
    sentinel.entering(((BoardSentinel)sentinel).getPlayersFarthestRank);
    try {
      if (UTIL.equals(p, new quotes.White())) 
        return new Integer(9);
      else 
        return new Integer(1);
    }
    finally {
      sentinel.leaving(((BoardSentinel)sentinel).getPlayersFarthestRank);
    }
  }
// ***** VDMTOOLS END Name=getPlayersFarthestRank#1|Object


// ***** VDMTOOLS START Name=getPlayersSecondFarthestRank#1|Object KEEP=NO
  private Number getPlayersSecondFarthestRank (final Object p) throws CGException {
    sentinel.entering(((BoardSentinel)sentinel).getPlayersSecondFarthestRank);
    try {
      if (UTIL.equals(p, new quotes.White())) 
        return new Integer(8);
      else 
        return new Integer(2);
    }
    finally {
      sentinel.leaving(((BoardSentinel)sentinel).getPlayersSecondFarthestRank);
    }
  }
// ***** VDMTOOLS END Name=getPlayersSecondFarthestRank#1|Object


// ***** VDMTOOLS START Name=getCapturedPieces KEEP=NO
  public Map getCapturedPieces () throws CGException {
    sentinel.entering(((BoardSentinel)sentinel).getCapturedPieces);
    try {
      return capturedPieces;
    }
    finally {
      sentinel.leaving(((BoardSentinel)sentinel).getCapturedPieces);
    }
  }
// ***** VDMTOOLS END Name=getCapturedPieces


// ***** VDMTOOLS START Name=check#1|Object KEEP=NO
  public Boolean check (final Object p) throws CGException {
    sentinel.entering(((BoardSentinel)sentinel).check__1_n_Player);
    try {
      boolean tmpQuant_3 = false;
      {
        Set e1_set_8 = getAllCellsFromPlayer(getOtherPlayer(p), new Integer(1));
        Cell c = null;
        Set tmpSet_19 = new HashSet(e1_set_8);
        for (Iterator enm_18 = tmpSet_19.iterator(); enm_18.hasNext() && !tmpQuant_3; ) {
          Cell elem_17 = (Cell)enm_18.next();
          /* c */
          c = elem_17;
          Piece obj_12 = (c.piece);
          if (obj_12.validMovement(c, getKingFromPlayer(p)).booleanValue()) 
            tmpQuant_3 = true;
        }
      }
      if (tmpQuant_3) 
        return Boolean.TRUE;
      else 
        return Boolean.FALSE;
    }
    finally {
      sentinel.leaving(((BoardSentinel)sentinel).check__1_n_Player);
    }
  }
// ***** VDMTOOLS END Name=check#1|Object


// ***** VDMTOOLS START Name=check#2|Object|Cell KEEP=NO
  public Boolean check (final Object p, final Cell t) throws CGException {
    sentinel.entering(((BoardSentinel)sentinel).check__2_n_Player_n_Cell);
    try {
      if (!this.pre_check(p, t).booleanValue()) 
        UTIL.RunTime("Precondition failure in check");
      boolean tmpQuant_4 = false;
      {
        Set e1_set_9 = getAllCellsFromPlayer(getOtherPlayer(p), new Integer(1));
        Cell c = null;
        Set tmpSet_19 = new HashSet(e1_set_9);
        for (Iterator enm_18 = tmpSet_19.iterator(); enm_18.hasNext() && !tmpQuant_4; ) {
          Cell elem_17 = (Cell)enm_18.next();
          /* c */
          c = elem_17;
          Piece obj_13 = (c.piece);
          if (obj_13.validMovement(c, t).booleanValue()) 
            tmpQuant_4 = true;
        }
      }
      if (tmpQuant_4) 
        return Boolean.TRUE;
      else 
        return Boolean.FALSE;
    }
    finally {
      sentinel.leaving(((BoardSentinel)sentinel).check__2_n_Player_n_Cell);
    }
  }
// ***** VDMTOOLS END Name=check#2|Object|Cell


// ***** VDMTOOLS START Name=pre_check#2|Object|Cell KEEP=NO
  public Boolean pre_check (final Object p, final Cell t) throws CGException {
    return Boolean.valueOf(UTIL.equals(t, getCell((t.x), (t.y))));
  }
// ***** VDMTOOLS END Name=pre_check#2|Object|Cell


// ***** VDMTOOLS START Name=getCheckingPiece#1|Object KEEP=NO
  public Cell getCheckingPiece (final Object p) throws CGException {
    sentinel.entering(((BoardSentinel)sentinel).getCheckingPiece);
    try {
      Cell c = null;
      boolean succ_7 = false;
      Set tmpSet_16 = new HashSet(getAllCellsFromPlayer(getOtherPlayer(p), new Integer(1)));
      for (Iterator enm_15 = tmpSet_16.iterator(); enm_15.hasNext() && !succ_7; ) {
        Cell tmpElem_2 = (Cell)enm_15.next();
        /* c */
        c = tmpElem_2;
        Piece obj_11 = (c.piece);
        succ_7 = obj_11.validMovement(c, getKingFromPlayer(p)).booleanValue();
      }
      if (!succ_7) 
        UTIL.RunTime("The binding environment was empty");
      return c;
    }
    finally {
      sentinel.leaving(((BoardSentinel)sentinel).getCheckingPiece);
    }
  }
// ***** VDMTOOLS END Name=getCheckingPiece#1|Object


// ***** VDMTOOLS START Name=endGame KEEP=NO
  public Boolean endGame () throws CGException {
    sentinel.entering(((BoardSentinel)sentinel).endGame);
    try {
      Boolean cond_1 = null;
      Boolean var1_2 = null;
      if ((var1_2 = check(turn)).booleanValue()) {
        boolean tmpQuant_7 = false;
        {
          Set e1_set_10 = getAllEmptyCells(new Integer(1));
          Cell c = null;
          Set tmpSet_41 = new HashSet(e1_set_10);
          for (Iterator enm_40 = tmpSet_41.iterator(); enm_40.hasNext() && !tmpQuant_7; ) {
            Cell elem_39 = (Cell)enm_40.next();
            /* c */
            c = elem_39;
            Boolean pred_11 = null;
            Piece obj_16 = (getKingFromPlayer(turn).piece);
            if (!(pred_11 = obj_16.validMovement(getKingFromPlayer(turn), c)).booleanValue()) {
              boolean tmpQuant_22 = false;
              {
                Set e1_set_26 = getAllCellsFromPlayer(turn, new Integer(1));
                Cell c2 = null;
                Set tmpSet_37 = new HashSet(e1_set_26);
                for (Iterator enm_36 = tmpSet_37.iterator(); enm_36.hasNext() && !tmpQuant_22; ) {
                  Cell elem_35 = (Cell)enm_36.next();
                  /* c2 */
                  c2 = elem_35;
                  Piece obj_30 = (c2.piece);
                  if (obj_30.validMovement(c2, getCheckingPiece(turn)).booleanValue()) 
                    tmpQuant_22 = true;
                }
              }
              pred_11 = Boolean.valueOf(!tmpQuant_22);
            }
            if (pred_11.booleanValue()) 
              tmpQuant_7 = true;
          }
        }
        var1_2 = Boolean.valueOf(!tmpQuant_7);
      }
      if (!(cond_1 = var1_2).booleanValue()) 
        cond_1 = Boolean.valueOf(stateEquals().size() >= 4);
      if (cond_1.booleanValue()) 
        return Boolean.TRUE;
      else 
        return Boolean.FALSE;
    }
    finally {
      sentinel.leaving(((BoardSentinel)sentinel).endGame);
    }
  }
// ***** VDMTOOLS END Name=endGame


// ***** VDMTOOLS START Name=getAllEmptyCells#1|Number KEEP=NO
  private Set getAllEmptyCells (final Number y) throws CGException {
    sentinel.entering(((BoardSentinel)sentinel).getAllEmptyCells);
    try {
      if (!this.pre_getAllEmptyCells(y).booleanValue()) 
        UTIL.RunTime("Precondition failure in getAllEmptyCells");
      if (y.intValue() == 9) {
        BoardLine obj_19 = (BoardLine)lines.get(y);
        return obj_19.getEmptyCells();
      }
      else {
        Set rexpr_5 = new HashSet();
        BoardLine obj_10 = (BoardLine)lines.get(y);
        rexpr_5 = new HashSet(obj_10.getEmptyCells());
        rexpr_5.addAll(getAllEmptyCells(new Integer(y.intValue() + 1)));
        return rexpr_5;
      }
    }
    finally {
      sentinel.leaving(((BoardSentinel)sentinel).getAllEmptyCells);
    }
  }
// ***** VDMTOOLS END Name=getAllEmptyCells#1|Number


// ***** VDMTOOLS START Name=pre_getAllEmptyCells#1|Number KEEP=NO
  private Boolean pre_getAllEmptyCells (final Number y) throws CGException {
    Set var2_4 = new HashSet();
    var2_4 = new HashSet();
    for (int count_7 = 1; count_7 <= 9; count_7++) 
      var2_4.add(new Integer(count_7));
    return Boolean.valueOf(UTIL.Contains(var2_4, y));
  }
// ***** VDMTOOLS END Name=pre_getAllEmptyCells#1|Number


// ***** VDMTOOLS START Name=getAllCellsFromPlayer#2|Object|Number KEEP=NO
  public Set getAllCellsFromPlayer (final Object p, final Number y) throws CGException {
    sentinel.entering(((BoardSentinel)sentinel).getAllCellsFromPlayer);
    try {
      if (!this.pre_getAllCellsFromPlayer(p, y).booleanValue()) 
        UTIL.RunTime("Precondition failure in getAllCellsFromPlayer");
      if (y.intValue() == 9) {
        BoardLine obj_22 = (BoardLine)lines.get(y);
        return obj_22.getCells(p);
      }
      else {
        Set rexpr_6 = new HashSet();
        BoardLine obj_11 = (BoardLine)lines.get(y);
        rexpr_6 = new HashSet(obj_11.getCells(p));
        rexpr_6.addAll(getAllCellsFromPlayer(p, new Integer(y.intValue() + 1)));
        return rexpr_6;
      }
    }
    finally {
      sentinel.leaving(((BoardSentinel)sentinel).getAllCellsFromPlayer);
    }
  }
// ***** VDMTOOLS END Name=getAllCellsFromPlayer#2|Object|Number


// ***** VDMTOOLS START Name=pre_getAllCellsFromPlayer#2|Object|Number KEEP=NO
  public Boolean pre_getAllCellsFromPlayer (final Object p, final Number y) throws CGException {
    Set var2_5 = new HashSet();
    var2_5 = new HashSet();
    for (int count_8 = 1; count_8 <= 9; count_8++) 
      var2_5.add(new Integer(count_8));
    return Boolean.valueOf(UTIL.Contains(var2_5, y));
  }
// ***** VDMTOOLS END Name=pre_getAllCellsFromPlayer#2|Object|Number


// ***** VDMTOOLS START Name=getKingFromPlayer#1|Object KEEP=NO
  public Cell getKingFromPlayer (final Object p) throws CGException {
    sentinel.entering(((BoardSentinel)sentinel).getKingFromPlayer);
    try {
      Cell c = null;
      boolean succ_6 = false;
      Set tmpSet_11 = new HashSet(getAllCellsFromPlayer(p, new Integer(1)));
      for (Iterator enm_10 = tmpSet_11.iterator(); enm_10.hasNext() && !succ_6; ) {
        Cell tmpElem_2 = (Cell)enm_10.next();
        /* c */
        c = tmpElem_2;
        succ_6 = ((c.piece) instanceof King);
      }
      if (!succ_6) 
        UTIL.RunTime("The binding environment was empty");
      return c;
    }
    finally {
      sentinel.leaving(((BoardSentinel)sentinel).getKingFromPlayer);
    }
  }
// ***** VDMTOOLS END Name=getKingFromPlayer#1|Object


// ***** VDMTOOLS START Name=getCurrentState#1|Number KEEP=NO
  static public List getCurrentState (final Number y) throws CGException {
    try {
      if (!pre_getCurrentState(y).booleanValue()) 
        UTIL.RunTime("Precondition failure in getCurrentState");
      if (y.intValue() == 9) {
        List tmpSeq_23 = new ArrayList();
        Board obj_29 = Board.getInstance();
        BoardLine obj_31 = ((BoardLine)obj_29.getLines().get(y));
        tmpSeq_23.add(getCurrentStateLine(obj_31.getSeqCells(), new Integer(1), y));
        return tmpSeq_23;
      }
      else {
        List rexpr_5 = null;
        List tmpSeq_7 = new ArrayList();
        Board obj_13 = Board.getInstance();
        BoardLine obj_15 = ((BoardLine)obj_13.getLines().get(y));
        tmpSeq_7.add(getCurrentStateLine(obj_15.getSeqCells(), new Integer(1), y));
        rexpr_5 = new ArrayList(tmpSeq_7);
        rexpr_5.addAll(getCurrentState(new Integer(y.intValue() + 1)));
        return rexpr_5;
      }
      setSentinel();
    }
    catch (Throwable e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=getCurrentState#1|Number


// ***** VDMTOOLS START Name=pre_getCurrentState#1|Number KEEP=NO
  static public Boolean pre_getCurrentState (final Number y) throws CGException {
    Set var2_4 = new HashSet();
    var2_4 = new HashSet();
    for (int count_7 = 1; count_7 <= 9; count_7++) 
      var2_4.add(new Integer(count_7));
    return Boolean.valueOf(UTIL.Contains(var2_4, y));
  }
// ***** VDMTOOLS END Name=pre_getCurrentState#1|Number


// ***** VDMTOOLS START Name=getCurrentStateLine#3|List|Number|Number KEEP=NO
  static private List getCurrentStateLine (final List line, final Number x, final Number y) throws CGException {
    try {
      if (!pre_getCurrentStateLine(line, x, y).booleanValue()) 
        UTIL.RunTime("Precondition failure in getCurrentStateLine");
      if (UTIL.equals(line, new ArrayList())) 
        return new ArrayList();
      else {
        Boolean cond_438 = null;
        Boolean var1_439 = null;
        if ((var1_439 = Boolean.valueOf(!UTIL.equals((((Cell)line.get(0)).piece), null))).booleanValue()) 
          var1_439 = Boolean.valueOf((((Cell)line.get(0)).piece) instanceof Lance);
        if ((cond_438 = var1_439).booleanValue()) 
          cond_438 = Boolean.valueOf(UTIL.equals(((((Cell)line.get(0)).piece).belongTo), new quotes.White()));
        if (cond_438.booleanValue()) {
          List rexpr_455 = null;
          List tmpSeq_457 = new ArrayList();
          tmpSeq_457.add(new quotes.LANCEW());
          rexpr_455 = new ArrayList(tmpSeq_457);
          rexpr_455.addAll(getCurrentStateLine(new ArrayList(line.subList(1, line.size())), new Integer(x.intValue() + 1), y));
          return rexpr_455;
        }
        else {
          Boolean cond_410 = null;
          Boolean var1_411 = null;
          if ((var1_411 = Boolean.valueOf(!UTIL.equals((((Cell)line.get(0)).piece), null))).booleanValue()) 
            var1_411 = Boolean.valueOf((((Cell)line.get(0)).piece) instanceof Knight);
          if ((cond_410 = var1_411).booleanValue()) 
            cond_410 = Boolean.valueOf(UTIL.equals(((((Cell)line.get(0)).piece).belongTo), new quotes.White()));
          if (cond_410.booleanValue()) {
            List rexpr_427 = null;
            List tmpSeq_429 = new ArrayList();
            tmpSeq_429.add(new quotes.KNIGHTW());
            rexpr_427 = new ArrayList(tmpSeq_429);
            rexpr_427.addAll(getCurrentStateLine(new ArrayList(line.subList(1, line.size())), new Integer(x.intValue() + 1), y));
            return rexpr_427;
          }
          else {
            Boolean cond_382 = null;
            Boolean var1_383 = null;
            if ((var1_383 = Boolean.valueOf(!UTIL.equals((((Cell)line.get(0)).piece), null))).booleanValue()) 
              var1_383 = Boolean.valueOf((((Cell)line.get(0)).piece) instanceof SilverGeneral);
            if ((cond_382 = var1_383).booleanValue()) 
              cond_382 = Boolean.valueOf(UTIL.equals(((((Cell)line.get(0)).piece).belongTo), new quotes.White()));
            if (cond_382.booleanValue()) {
              List rexpr_399 = null;
              List tmpSeq_401 = new ArrayList();
              tmpSeq_401.add(new quotes.SILVERGENERALW());
              rexpr_399 = new ArrayList(tmpSeq_401);
              rexpr_399.addAll(getCurrentStateLine(new ArrayList(line.subList(1, line.size())), new Integer(x.intValue() + 1), y));
              return rexpr_399;
            }
            else {
              Boolean cond_354 = null;
              Boolean var1_355 = null;
              if ((var1_355 = Boolean.valueOf(!UTIL.equals((((Cell)line.get(0)).piece), null))).booleanValue()) 
                var1_355 = Boolean.valueOf((((Cell)line.get(0)).piece) instanceof GoldGeneral);
              if ((cond_354 = var1_355).booleanValue()) 
                cond_354 = Boolean.valueOf(UTIL.equals(((((Cell)line.get(0)).piece).belongTo), new quotes.White()));
              if (cond_354.booleanValue()) {
                List rexpr_371 = null;
                List tmpSeq_373 = new ArrayList();
                tmpSeq_373.add(new quotes.GOLDGENERALW());
                rexpr_371 = new ArrayList(tmpSeq_373);
                rexpr_371.addAll(getCurrentStateLine(new ArrayList(line.subList(1, line.size())), new Integer(x.intValue() + 1), y));
                return rexpr_371;
              }
              else {
                Boolean cond_326 = null;
                Boolean var1_327 = null;
                if ((var1_327 = Boolean.valueOf(!UTIL.equals((((Cell)line.get(0)).piece), null))).booleanValue()) 
                  var1_327 = Boolean.valueOf((((Cell)line.get(0)).piece) instanceof King);
                if ((cond_326 = var1_327).booleanValue()) 
                  cond_326 = Boolean.valueOf(UTIL.equals(((((Cell)line.get(0)).piece).belongTo), new quotes.White()));
                if (cond_326.booleanValue()) {
                  List rexpr_343 = null;
                  List tmpSeq_345 = new ArrayList();
                  tmpSeq_345.add(new quotes.KINGW());
                  rexpr_343 = new ArrayList(tmpSeq_345);
                  rexpr_343.addAll(getCurrentStateLine(new ArrayList(line.subList(1, line.size())), new Integer(x.intValue() + 1), y));
                  return rexpr_343;
                }
                else {
                  Boolean cond_298 = null;
                  Boolean var1_299 = null;
                  if ((var1_299 = Boolean.valueOf(!UTIL.equals((((Cell)line.get(0)).piece), null))).booleanValue()) 
                    var1_299 = Boolean.valueOf((((Cell)line.get(0)).piece) instanceof Bishop);
                  if ((cond_298 = var1_299).booleanValue()) 
                    cond_298 = Boolean.valueOf(UTIL.equals(((((Cell)line.get(0)).piece).belongTo), new quotes.White()));
                  if (cond_298.booleanValue()) {
                    List rexpr_315 = null;
                    List tmpSeq_317 = new ArrayList();
                    tmpSeq_317.add(new quotes.BISHOPW());
                    rexpr_315 = new ArrayList(tmpSeq_317);
                    rexpr_315.addAll(getCurrentStateLine(new ArrayList(line.subList(1, line.size())), new Integer(x.intValue() + 1), y));
                    return rexpr_315;
                  }
                  else {
                    Boolean cond_270 = null;
                    Boolean var1_271 = null;
                    if ((var1_271 = Boolean.valueOf(!UTIL.equals((((Cell)line.get(0)).piece), null))).booleanValue()) 
                      var1_271 = Boolean.valueOf((((Cell)line.get(0)).piece) instanceof Rook);
                    if ((cond_270 = var1_271).booleanValue()) 
                      cond_270 = Boolean.valueOf(UTIL.equals(((((Cell)line.get(0)).piece).belongTo), new quotes.White()));
                    if (cond_270.booleanValue()) {
                      List rexpr_287 = null;
                      List tmpSeq_289 = new ArrayList();
                      tmpSeq_289.add(new quotes.ROOKW());
                      rexpr_287 = new ArrayList(tmpSeq_289);
                      rexpr_287.addAll(getCurrentStateLine(new ArrayList(line.subList(1, line.size())), new Integer(x.intValue() + 1), y));
                      return rexpr_287;
                    }
                    else {
                      Boolean cond_242 = null;
                      Boolean var1_243 = null;
                      if ((var1_243 = Boolean.valueOf(!UTIL.equals((((Cell)line.get(0)).piece), null))).booleanValue()) 
                        var1_243 = Boolean.valueOf((((Cell)line.get(0)).piece) instanceof Pawn);
                      if ((cond_242 = var1_243).booleanValue()) 
                        cond_242 = Boolean.valueOf(UTIL.equals(((((Cell)line.get(0)).piece).belongTo), new quotes.White()));
                      if (cond_242.booleanValue()) {
                        List rexpr_259 = null;
                        List tmpSeq_261 = new ArrayList();
                        tmpSeq_261.add(new quotes.PAWNW());
                        rexpr_259 = new ArrayList(tmpSeq_261);
                        rexpr_259.addAll(getCurrentStateLine(new ArrayList(line.subList(1, line.size())), new Integer(x.intValue() + 1), y));
                        return rexpr_259;
                      }
                      else {
                        Boolean cond_214 = null;
                        Boolean var1_215 = null;
                        if ((var1_215 = Boolean.valueOf(!UTIL.equals((((Cell)line.get(0)).piece), null))).booleanValue()) 
                          var1_215 = Boolean.valueOf((((Cell)line.get(0)).piece) instanceof Lance);
                        if ((cond_214 = var1_215).booleanValue()) 
                          cond_214 = Boolean.valueOf(UTIL.equals(((((Cell)line.get(0)).piece).belongTo), new quotes.Black()));
                        if (cond_214.booleanValue()) {
                          List rexpr_231 = null;
                          List tmpSeq_233 = new ArrayList();
                          tmpSeq_233.add(new quotes.LANCEB());
                          rexpr_231 = new ArrayList(tmpSeq_233);
                          rexpr_231.addAll(getCurrentStateLine(new ArrayList(line.subList(1, line.size())), new Integer(x.intValue() + 1), y));
                          return rexpr_231;
                        }
                        else {
                          Boolean cond_186 = null;
                          Boolean var1_187 = null;
                          if ((var1_187 = Boolean.valueOf(!UTIL.equals((((Cell)line.get(0)).piece), null))).booleanValue()) 
                            var1_187 = Boolean.valueOf((((Cell)line.get(0)).piece) instanceof Knight);
                          if ((cond_186 = var1_187).booleanValue()) 
                            cond_186 = Boolean.valueOf(UTIL.equals(((((Cell)line.get(0)).piece).belongTo), new quotes.Black()));
                          if (cond_186.booleanValue()) {
                            List rexpr_203 = null;
                            List tmpSeq_205 = new ArrayList();
                            tmpSeq_205.add(new quotes.KNIGHTB());
                            rexpr_203 = new ArrayList(tmpSeq_205);
                            rexpr_203.addAll(getCurrentStateLine(new ArrayList(line.subList(1, line.size())), new Integer(x.intValue() + 1), y));
                            return rexpr_203;
                          }
                          else {
                            Boolean cond_158 = null;
                            Boolean var1_159 = null;
                            if ((var1_159 = Boolean.valueOf(!UTIL.equals((((Cell)line.get(0)).piece), null))).booleanValue()) 
                              var1_159 = Boolean.valueOf((((Cell)line.get(0)).piece) instanceof SilverGeneral);
                            if ((cond_158 = var1_159).booleanValue()) 
                              cond_158 = Boolean.valueOf(UTIL.equals(((((Cell)line.get(0)).piece).belongTo), new quotes.Black()));
                            if (cond_158.booleanValue()) {
                              List rexpr_175 = null;
                              List tmpSeq_177 = new ArrayList();
                              tmpSeq_177.add(new quotes.SILVERGENERALB());
                              rexpr_175 = new ArrayList(tmpSeq_177);
                              rexpr_175.addAll(getCurrentStateLine(new ArrayList(line.subList(1, line.size())), new Integer(x.intValue() + 1), y));
                              return rexpr_175;
                            }
                            else {
                              Boolean cond_130 = null;
                              Boolean var1_131 = null;
                              if ((var1_131 = Boolean.valueOf(!UTIL.equals((((Cell)line.get(0)).piece), null))).booleanValue()) 
                                var1_131 = Boolean.valueOf((((Cell)line.get(0)).piece) instanceof GoldGeneral);
                              if ((cond_130 = var1_131).booleanValue()) 
                                cond_130 = Boolean.valueOf(UTIL.equals(((((Cell)line.get(0)).piece).belongTo), new quotes.Black()));
                              if (cond_130.booleanValue()) {
                                List rexpr_147 = null;
                                List tmpSeq_149 = new ArrayList();
                                tmpSeq_149.add(new quotes.GOLDGENERALB());
                                rexpr_147 = new ArrayList(tmpSeq_149);
                                rexpr_147.addAll(getCurrentStateLine(new ArrayList(line.subList(1, line.size())), new Integer(x.intValue() + 1), y));
                                return rexpr_147;
                              }
                              else {
                                Boolean cond_102 = null;
                                Boolean var1_103 = null;
                                if ((var1_103 = Boolean.valueOf(!UTIL.equals((((Cell)line.get(0)).piece), null))).booleanValue()) 
                                  var1_103 = Boolean.valueOf((((Cell)line.get(0)).piece) instanceof King);
                                if ((cond_102 = var1_103).booleanValue()) 
                                  cond_102 = Boolean.valueOf(UTIL.equals(((((Cell)line.get(0)).piece).belongTo), new quotes.Black()));
                                if (cond_102.booleanValue()) {
                                  List rexpr_119 = null;
                                  List tmpSeq_121 = new ArrayList();
                                  tmpSeq_121.add(new quotes.KINGB());
                                  rexpr_119 = new ArrayList(tmpSeq_121);
                                  rexpr_119.addAll(getCurrentStateLine(new ArrayList(line.subList(1, line.size())), new Integer(x.intValue() + 1), y));
                                  return rexpr_119;
                                }
                                else {
                                  Boolean cond_74 = null;
                                  Boolean var1_75 = null;
                                  if ((var1_75 = Boolean.valueOf(!UTIL.equals((((Cell)line.get(0)).piece), null))).booleanValue()) 
                                    var1_75 = Boolean.valueOf((((Cell)line.get(0)).piece) instanceof Bishop);
                                  if ((cond_74 = var1_75).booleanValue()) 
                                    cond_74 = Boolean.valueOf(UTIL.equals(((((Cell)line.get(0)).piece).belongTo), new quotes.Black()));
                                  if (cond_74.booleanValue()) {
                                    List rexpr_91 = null;
                                    List tmpSeq_93 = new ArrayList();
                                    tmpSeq_93.add(new quotes.BISHOPB());
                                    rexpr_91 = new ArrayList(tmpSeq_93);
                                    rexpr_91.addAll(getCurrentStateLine(new ArrayList(line.subList(1, line.size())), new Integer(x.intValue() + 1), y));
                                    return rexpr_91;
                                  }
                                  else {
                                    Boolean cond_46 = null;
                                    Boolean var1_47 = null;
                                    if ((var1_47 = Boolean.valueOf(!UTIL.equals((((Cell)line.get(0)).piece), null))).booleanValue()) 
                                      var1_47 = Boolean.valueOf((((Cell)line.get(0)).piece) instanceof Rook);
                                    if ((cond_46 = var1_47).booleanValue()) 
                                      cond_46 = Boolean.valueOf(UTIL.equals(((((Cell)line.get(0)).piece).belongTo), new quotes.Black()));
                                    if (cond_46.booleanValue()) {
                                      List rexpr_63 = null;
                                      List tmpSeq_65 = new ArrayList();
                                      tmpSeq_65.add(new quotes.ROOKB());
                                      rexpr_63 = new ArrayList(tmpSeq_65);
                                      rexpr_63.addAll(getCurrentStateLine(new ArrayList(line.subList(1, line.size())), new Integer(x.intValue() + 1), y));
                                      return rexpr_63;
                                    }
                                    else {
                                      Boolean cond_18 = null;
                                      Boolean var1_19 = null;
                                      if ((var1_19 = Boolean.valueOf(!UTIL.equals((((Cell)line.get(0)).piece), null))).booleanValue()) 
                                        var1_19 = Boolean.valueOf((((Cell)line.get(0)).piece) instanceof Pawn);
                                      if ((cond_18 = var1_19).booleanValue()) 
                                        cond_18 = Boolean.valueOf(UTIL.equals(((((Cell)line.get(0)).piece).belongTo), new quotes.Black()));
                                      if (cond_18.booleanValue()) {
                                        List rexpr_35 = null;
                                        List tmpSeq_37 = new ArrayList();
                                        tmpSeq_37.add(new quotes.PAWNB());
                                        rexpr_35 = new ArrayList(tmpSeq_37);
                                        rexpr_35.addAll(getCurrentStateLine(new ArrayList(line.subList(1, line.size())), new Integer(x.intValue() + 1), y));
                                        return rexpr_35;
                                      }
                                      else {
                                        List rexpr_7 = null;
                                        List tmpSeq_9 = new ArrayList();
                                        tmpSeq_9.add(new quotes.NONE());
                                        rexpr_7 = new ArrayList(tmpSeq_9);
                                        rexpr_7.addAll(getCurrentStateLine(new ArrayList(line.subList(1, line.size())), new Integer(x.intValue() + 1), y));
                                        return rexpr_7;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      setSentinel();
    }
    catch (Throwable e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=getCurrentStateLine#3|List|Number|Number


// ***** VDMTOOLS START Name=pre_getCurrentStateLine#3|List|Number|Number KEEP=NO
  static private Boolean pre_getCurrentStateLine (final List line, final Number x, final Number y) throws CGException {
    Boolean varRes_4 = null;
    Boolean var1_5 = null;
    Boolean var1_6 = null;
    if ((var1_6 = Boolean.valueOf(y.intValue() > 0)).booleanValue()) 
      var1_6 = Boolean.valueOf(y.intValue() < 10);
    if ((var1_5 = var1_6).booleanValue()) 
      var1_5 = Boolean.valueOf(x.intValue() > 0);
    if ((varRes_4 = var1_5).booleanValue()) {
      Boolean var2_16 = null;
      if (!(var2_16 = Boolean.valueOf(x.intValue() < 10)).booleanValue()) {
        Boolean var2_20 = null;
        if ((var2_20 = Boolean.valueOf(x.intValue() == 10)).booleanValue()) 
          var2_20 = Boolean.valueOf(UTIL.equals(line, new ArrayList()));
        var2_16 = var2_20;
      }
      varRes_4 = var2_16;
    }
    return varRes_4;
  }
// ***** VDMTOOLS END Name=pre_getCurrentStateLine#3|List|Number|Number


// ***** VDMTOOLS START Name=existsPawnInColumn#2|Cell|Piece KEEP=NO
  private Boolean existsPawnInColumn (final Cell c, final Piece p) throws CGException {
    sentinel.entering(((BoardSentinel)sentinel).existsPawnInColumn);
    try {
      Boolean rexpr_3 = null;
      if ((rexpr_3 = Boolean.valueOf(p instanceof Pawn)).booleanValue()) {
        boolean tmpQuant_7 = false;
        {
          Set e_set_8 = new HashSet();
          e_set_8 = new HashSet();
          for (int count_11 = 1; count_11 <= 9; count_11++) 
            e_set_8.add(new Integer(count_11));
          Number y = null;
          Set tmpSet_41 = new HashSet(e_set_8);
          for (Iterator enm_40 = tmpSet_41.iterator(); enm_40.hasNext() && !tmpQuant_7; ) {
            Number elem_39 = UTIL.NumberToInt(enm_40.next());
            /* y */
            y = elem_39;
            Boolean pred_14 = null;
            Boolean var1_15 = null;
            if ((var1_15 = Boolean.valueOf(!UTIL.equals((getCell((c.x), y).piece), null))).booleanValue()) 
              var1_15 = Boolean.valueOf((getCell((c.x), y).piece) instanceof Pawn);
            if ((pred_14 = var1_15).booleanValue()) 
              pred_14 = Boolean.valueOf(UTIL.equals(((getCell((c.x), y).piece).belongTo), (p.belongTo)));
            if (pred_14.booleanValue()) 
              tmpQuant_7 = true;
          }
        }
        rexpr_3 = Boolean.valueOf(tmpQuant_7);
      }
      return rexpr_3;
    }
    finally {
      sentinel.leaving(((BoardSentinel)sentinel).existsPawnInColumn);
    }
  }
// ***** VDMTOOLS END Name=existsPawnInColumn#2|Cell|Piece


// ***** VDMTOOLS START Name=checkIfPawnDroppedCheck#2|Cell|Piece KEEP=NO
  private Boolean checkIfPawnDroppedCheck (final Cell c, final Piece p) throws CGException {
    sentinel.entering(((BoardSentinel)sentinel).checkIfPawnDroppedCheck);
    try {
      Boolean ret = null;
      if (!(p instanceof Pawn)) 
        return Boolean.TRUE;
      else {
        c.piece = (Piece)p;
        if (!this.inv_Board().booleanValue()) 
          UTIL.RunTime("Instance invariant failure in Board");
        if (UTIL.equals(turn, new quotes.White())) {
          turn = new quotes.Black();
          if (!this.inv_Board().booleanValue()) 
            UTIL.RunTime("Instance invariant failure in Board");
        }
        else {
          turn = new quotes.White();
          if (!this.inv_Board().booleanValue()) 
            UTIL.RunTime("Instance invariant failure in Board");
        }
        ret = (Boolean)UTIL.clone(endGame());
        if (!this.inv_Board().booleanValue()) 
          UTIL.RunTime("Instance invariant failure in Board");
        c.piece = null;
        if (!this.inv_Board().booleanValue()) 
          UTIL.RunTime("Instance invariant failure in Board");
        if (UTIL.equals(turn, new quotes.White())) {
          turn = new quotes.Black();
          if (!this.inv_Board().booleanValue()) 
            UTIL.RunTime("Instance invariant failure in Board");
        }
        else {
          turn = new quotes.White();
          if (!this.inv_Board().booleanValue()) 
            UTIL.RunTime("Instance invariant failure in Board");
        }
        return ret;
      }
    }
    finally {
      sentinel.leaving(((BoardSentinel)sentinel).checkIfPawnDroppedCheck);
    }
  }
// ***** VDMTOOLS END Name=checkIfPawnDroppedCheck#2|Cell|Piece


// ***** VDMTOOLS START Name=stateEquals KEEP=NO
  public Set stateEquals () throws CGException {
    sentinel.entering(((BoardSentinel)sentinel).stateEquals);
    try {
      Set res_s_2 = new HashSet();
      {
        Set e1_set_6 = new HashSet(allMoves);
        BoardState state = null;
        Set tmpSet_12 = new HashSet(e1_set_6);
        for (Iterator enm_11 = tmpSet_12.iterator(); enm_11.hasNext(); ) {
          BoardState elem_10 = (BoardState)enm_11.next();
          /* state */
          state = elem_10;
          if (state.vdm_equals(this)) {
            res_s_2.add(state);
          }
        }
      }
      return res_s_2;
    }
    finally {
      sentinel.leaving(((BoardSentinel)sentinel).stateEquals);
    }
  }
// ***** VDMTOOLS END Name=stateEquals


// ***** VDMTOOLS START Name=getOtherPlayer#1|Object KEEP=NO
  static private Object getOtherPlayer (final Object p) throws CGException {
    Object varRes_2 = null;
    if (UTIL.equals(p, new quotes.White())) 
      varRes_2 = new quotes.Black();
    else 
      varRes_2 = new quotes.White();
    if (!post_getOtherPlayer(p, varRes_2).booleanValue()) 
      UTIL.RunTime("Postcondition failure in getOtherPlayer");
    return varRes_2;
  }
// ***** VDMTOOLS END Name=getOtherPlayer#1|Object


// ***** VDMTOOLS START Name=post_getOtherPlayer#2|Object|Object KEEP=NO
  static private Boolean post_getOtherPlayer (final Object p, final Object RESULT) throws CGException {
    return Boolean.valueOf(!UTIL.equals(RESULT, p));
  }
// ***** VDMTOOLS END Name=post_getOtherPlayer#2|Object|Object


// ***** VDMTOOLS START Name=getIndex#2|Object|List KEEP=NO
  static public Number getIndex (final Object t, final List s) throws CGException {
    if (!pre_getIndex(t, s).booleanValue()) 
      UTIL.RunTime("Precondition failure in getIndex");
    Number varRes_3 = null;
    {
      Set riseq_7 = new HashSet();
      int max_8 = s.size();
      for (int i_9 = 1; i_9 <= max_8; i_9++) 
        riseq_7.add(new Integer(i_9));
      Number n = null;
      boolean succ_10 = false;
      Set tmpSet_17 = new HashSet(riseq_7);
      for (Iterator enm_16 = tmpSet_17.iterator(); enm_16.hasNext() && !succ_10; ) {
        Number tmpElem_4 = UTIL.NumberToInt(enm_16.next());
        /* n */
        n = tmpElem_4;
        if ((1 > n.intValue()) || (n.intValue() > s.size())) 
          UTIL.RunTime("Illegal index");
        succ_10 = UTIL.equals(((Object)s.get(n.intValue() - 1)), t);
      }
      if (!succ_10) 
        UTIL.RunTime("The binding environment was empty");
      varRes_3 = n;
    }
    if (!post_getIndex(t, s, varRes_3).booleanValue()) 
      UTIL.RunTime("Postcondition failure in getIndex");
    return varRes_3;
  }
// ***** VDMTOOLS END Name=getIndex#2|Object|List


// ***** VDMTOOLS START Name=pre_getIndex#2|Object|List KEEP=NO
  static public Boolean pre_getIndex (final Object t, final List s) throws CGException {
    int tmpQuant_4 = 0;
    {
      Set riseq_7 = new HashSet();
      int max_8 = s.size();
      for (int i_9 = 1; i_9 <= max_8; i_9++) 
        riseq_7.add(new Integer(i_9));
      Number n = null;
      Set tmpSet_18 = new HashSet(riseq_7);
      for (Iterator enm_17 = tmpSet_18.iterator(); enm_17.hasNext() && tmpQuant_4 <= 2; ) {
        Number elem_16 = UTIL.NumberToInt(enm_17.next());
        /* n */
        n = elem_16;
        if ((1 > n.intValue()) || (n.intValue() > s.size())) 
          UTIL.RunTime("Illegal index");
        if (UTIL.equals(((Object)s.get(n.intValue() - 1)), t)) 
          tmpQuant_4++;
      }
    }
    return Boolean.valueOf(tmpQuant_4 == 1);
  }
// ***** VDMTOOLS END Name=pre_getIndex#2|Object|List


// ***** VDMTOOLS START Name=post_getIndex#3|Object|List|Number KEEP=NO
  static public Boolean post_getIndex (final Object t, final List s, final Number RESULT) throws CGException {
    if ((1 > RESULT.intValue()) || (RESULT.intValue() > s.size())) 
      UTIL.RunTime("Illegal index");
    return Boolean.valueOf(UTIL.equals(t, ((Object)s.get(RESULT.intValue() - 1))));
  }
// ***** VDMTOOLS END Name=post_getIndex#3|Object|List|Number


// ***** VDMTOOLS START Name=mapStartSeq#3|List|Number|Number KEEP=NO
  static public List mapStartSeq (final List s, final Number x, final Number y) throws CGException {
    if (!pre_mapStartSeq(s, x, y).booleanValue()) 
      UTIL.RunTime("Precondition failure in mapStartSeq");
    List varRes_4 = null;
    if (UTIL.equals(s, new ArrayList())) 
      varRes_4 = new ArrayList();
    else if (UTIL.equals(s.get(0), new quotes.LANCEB())) {
      List tmpSeq_296 = new ArrayList();
      tmpSeq_296.add(new Cell(x, y, new Lance(new quotes.Black())));
      varRes_4 = new ArrayList(tmpSeq_296);
      varRes_4.addAll(mapStartSeq(new ArrayList(s.subList(1, s.size())), new Integer(x.intValue() + 1), y));
    }
    else if (UTIL.equals(s.get(0), new quotes.KNIGHTB())) {
      List tmpSeq_278 = new ArrayList();
      tmpSeq_278.add(new Cell(x, y, new Knight(new quotes.Black())));
      varRes_4 = new ArrayList(tmpSeq_278);
      varRes_4.addAll(mapStartSeq(new ArrayList(s.subList(1, s.size())), new Integer(x.intValue() + 1), y));
    }
    else if (UTIL.equals(s.get(0), new quotes.SILVERGENERALB())) {
      List tmpSeq_260 = new ArrayList();
      tmpSeq_260.add(new Cell(x, y, new SilverGeneral(new quotes.Black())));
      varRes_4 = new ArrayList(tmpSeq_260);
      varRes_4.addAll(mapStartSeq(new ArrayList(s.subList(1, s.size())), new Integer(x.intValue() + 1), y));
    }
    else if (UTIL.equals(s.get(0), new quotes.GOLDGENERALB())) {
      List tmpSeq_242 = new ArrayList();
      tmpSeq_242.add(new Cell(x, y, new GoldGeneral(new quotes.Black())));
      varRes_4 = new ArrayList(tmpSeq_242);
      varRes_4.addAll(mapStartSeq(new ArrayList(s.subList(1, s.size())), new Integer(x.intValue() + 1), y));
    }
    else if (UTIL.equals(s.get(0), new quotes.KINGB())) {
      List tmpSeq_224 = new ArrayList();
      tmpSeq_224.add(new Cell(x, y, new King(new quotes.Black())));
      varRes_4 = new ArrayList(tmpSeq_224);
      varRes_4.addAll(mapStartSeq(new ArrayList(s.subList(1, s.size())), new Integer(x.intValue() + 1), y));
    }
    else if (UTIL.equals(s.get(0), new quotes.BISHOPB())) {
      List tmpSeq_206 = new ArrayList();
      tmpSeq_206.add(new Cell(x, y, new Bishop(new quotes.Black())));
      varRes_4 = new ArrayList(tmpSeq_206);
      varRes_4.addAll(mapStartSeq(new ArrayList(s.subList(1, s.size())), new Integer(x.intValue() + 1), y));
    }
    else if (UTIL.equals(s.get(0), new quotes.ROOKB())) {
      List tmpSeq_188 = new ArrayList();
      tmpSeq_188.add(new Cell(x, y, new Rook(new quotes.Black())));
      varRes_4 = new ArrayList(tmpSeq_188);
      varRes_4.addAll(mapStartSeq(new ArrayList(s.subList(1, s.size())), new Integer(x.intValue() + 1), y));
    }
    else if (UTIL.equals(s.get(0), new quotes.PAWNB())) {
      List tmpSeq_170 = new ArrayList();
      tmpSeq_170.add(new Cell(x, y, new Pawn(new quotes.Black())));
      varRes_4 = new ArrayList(tmpSeq_170);
      varRes_4.addAll(mapStartSeq(new ArrayList(s.subList(1, s.size())), new Integer(x.intValue() + 1), y));
    }
    else if (UTIL.equals(s.get(0), new quotes.LANCEW())) {
      List tmpSeq_152 = new ArrayList();
      tmpSeq_152.add(new Cell(x, y, new Lance(new quotes.White())));
      varRes_4 = new ArrayList(tmpSeq_152);
      varRes_4.addAll(mapStartSeq(new ArrayList(s.subList(1, s.size())), new Integer(x.intValue() + 1), y));
    }
    else if (UTIL.equals(s.get(0), new quotes.KNIGHTW())) {
      List tmpSeq_134 = new ArrayList();
      tmpSeq_134.add(new Cell(x, y, new Knight(new quotes.White())));
      varRes_4 = new ArrayList(tmpSeq_134);
      varRes_4.addAll(mapStartSeq(new ArrayList(s.subList(1, s.size())), new Integer(x.intValue() + 1), y));
    }
    else if (UTIL.equals(s.get(0), new quotes.SILVERGENERALW())) {
      List tmpSeq_116 = new ArrayList();
      tmpSeq_116.add(new Cell(x, y, new SilverGeneral(new quotes.White())));
      varRes_4 = new ArrayList(tmpSeq_116);
      varRes_4.addAll(mapStartSeq(new ArrayList(s.subList(1, s.size())), new Integer(x.intValue() + 1), y));
    }
    else if (UTIL.equals(s.get(0), new quotes.GOLDGENERALW())) {
      List tmpSeq_98 = new ArrayList();
      tmpSeq_98.add(new Cell(x, y, new GoldGeneral(new quotes.White())));
      varRes_4 = new ArrayList(tmpSeq_98);
      varRes_4.addAll(mapStartSeq(new ArrayList(s.subList(1, s.size())), new Integer(x.intValue() + 1), y));
    }
    else if (UTIL.equals(s.get(0), new quotes.KINGW())) {
      List tmpSeq_80 = new ArrayList();
      tmpSeq_80.add(new Cell(x, y, new King(new quotes.White())));
      varRes_4 = new ArrayList(tmpSeq_80);
      varRes_4.addAll(mapStartSeq(new ArrayList(s.subList(1, s.size())), new Integer(x.intValue() + 1), y));
    }
    else if (UTIL.equals(s.get(0), new quotes.BISHOPW())) {
      List tmpSeq_62 = new ArrayList();
      tmpSeq_62.add(new Cell(x, y, new Bishop(new quotes.White())));
      varRes_4 = new ArrayList(tmpSeq_62);
      varRes_4.addAll(mapStartSeq(new ArrayList(s.subList(1, s.size())), new Integer(x.intValue() + 1), y));
    }
    else if (UTIL.equals(s.get(0), new quotes.ROOKW())) {
      List tmpSeq_44 = new ArrayList();
      tmpSeq_44.add(new Cell(x, y, new Rook(new quotes.White())));
      varRes_4 = new ArrayList(tmpSeq_44);
      varRes_4.addAll(mapStartSeq(new ArrayList(s.subList(1, s.size())), new Integer(x.intValue() + 1), y));
    }
    else if (UTIL.equals(s.get(0), new quotes.PAWNW())) {
      List tmpSeq_26 = new ArrayList();
      tmpSeq_26.add(new Cell(x, y, new Pawn(new quotes.White())));
      varRes_4 = new ArrayList(tmpSeq_26);
      varRes_4.addAll(mapStartSeq(new ArrayList(s.subList(1, s.size())), new Integer(x.intValue() + 1), y));
    }
    else {
      List tmpSeq_10 = new ArrayList();
      tmpSeq_10.add(new Cell(x, y));
      varRes_4 = new ArrayList(tmpSeq_10);
      varRes_4.addAll(mapStartSeq(new ArrayList(s.subList(1, s.size())), new Integer(x.intValue() + 1), y));
    }
    return varRes_4;
  }
// ***** VDMTOOLS END Name=mapStartSeq#3|List|Number|Number


// ***** VDMTOOLS START Name=pre_mapStartSeq#3|List|Number|Number KEEP=NO
  static public Boolean pre_mapStartSeq (final List s, final Number x, final Number y) throws CGException {
    Boolean varRes_4 = null;
    Boolean var1_5 = null;
    Boolean var1_6 = null;
    Boolean var1_7 = null;
    if ((var1_7 = Boolean.valueOf(y.intValue() > 0)).booleanValue()) 
      var1_7 = Boolean.valueOf(y.intValue() < 10);
    if ((var1_6 = var1_7).booleanValue()) 
      var1_6 = Boolean.valueOf(x.intValue() > 0);
    if ((var1_5 = var1_6).booleanValue()) {
      Boolean var2_17 = null;
      if (!(var2_17 = Boolean.valueOf(x.intValue() < 10)).booleanValue()) {
        Boolean var2_21 = null;
        if ((var2_21 = Boolean.valueOf(x.intValue() == 10)).booleanValue()) 
          var2_21 = Boolean.valueOf(UTIL.equals(s, new ArrayList()));
        var2_17 = var2_21;
      }
      var1_5 = var2_17;
    }
    if ((varRes_4 = var1_5).booleanValue()) 
      varRes_4 = Boolean.valueOf(s.size() == (10 - x.intValue()));
    return varRes_4;
  }
// ***** VDMTOOLS END Name=pre_mapStartSeq#3|List|Number|Number


// ***** VDMTOOLS START Name=zone#1|Number KEEP=NO
  static private Object zone (final Number y) throws CGException {
    if (!pre_zone(y).booleanValue()) 
      UTIL.RunTime("Precondition failure in zone");
    Object varRes_2 = null;
    if (y.intValue() < 4) 
      varRes_2 = new quotes.White();
    else if (y.intValue() > 6) 
      varRes_2 = new quotes.Black();
    else 
      varRes_2 = null;
    return varRes_2;
  }
// ***** VDMTOOLS END Name=zone#1|Number


// ***** VDMTOOLS START Name=pre_zone#1|Number KEEP=NO
  static private Boolean pre_zone (final Number y) throws CGException {
    Set var2_4 = new HashSet();
    var2_4 = new HashSet();
    for (int count_7 = 1; count_7 <= 9; count_7++) 
      var2_4.add(new Integer(count_7));
    return Boolean.valueOf(UTIL.Contains(var2_4, y));
  }
// ***** VDMTOOLS END Name=pre_zone#1|Number

}
;
